// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"":"Object;i,list",
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
}
};

$$.Dynamic_ = {"":"Object;"
};

$$.Null = {"":"Object;"
};

$$.MetaInfo = {"":"Object;_tag>,_tags,_set>"
};

$$.JSSyntaxRegExp = {"":"Object;_liblib0$_pattern,_multiLine,_ignoreCase",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.index(m, 0);
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._liblib0$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true
};

$$._MatchImplementation = {"":"Object;pattern>,str,start,end,_groups",
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"":"Object;_re,_str",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":"Object;_re,_str,_liblib0$_next=,_done",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._liblib0$_next;
  this._liblib0$_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._liblib0$_next == null))
    return true;
  this._liblib0$_next = this._re.firstMatch$1(this._str);
  if (this._liblib0$_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"":"Object;start,str,pattern>",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$.NullThrownError = {"":"Object;",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"":"Object;message",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return "Illegal argument(s): " + $.S(t1);
  return "Illegal argument(s)";
}
};

$$.RangeError = {"":"ArgumentError;message",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"":"Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  t1.i_1 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_1, t2.length); t1.i_1 = $.add(t1.i_1, 1)) {
    if ($.gtB(t1.i_1, 0)) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_1;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_0;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_0;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_0 = $.StringBuffer_StringBuffer("");
      t1.i_1 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_1, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); t1.i_1 = $.add(t1.i_1, 1)) {
          if ($.gtB(t1.i_1, 0)) {
            t3 = t1.sb_0;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_0;
          $.getInterceptor$JSArray(t3).add$1(t3, $.Error_safeToString($.index(t2, t1.i_1)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
      else {
        t3 = t1.sb_0;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_0;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_0;
          $.getInterceptor$JSArray(t3).add$1(t3, $.index(t2, i));
        }
        t1 = t1.sb_0;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"":"Object;message>",
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {"":"Object;message",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {"":"Object;",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$.RuntimeError = {"":"Object;message",
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$._ExceptionImplementation = {"":"Object;message",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
}
};

$$.FormatException = {"":"Object;message",
 toString$0: function() {
  return "FormatException: " + $.S(this.message);
}
};

$$.IllegalJSRegExpException = {"":"Object;_pattern,_errmsg",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
}
};

$$._HashMapImpl = {"":"Object;_keys>,_values,_loadLimit,_numberOfEntries,_numberOfDeleted",
 _probeForAdding$1: function(key) {
  var t1, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  t3 = this._keys;
  t3 = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
  if (t3 !== (t3 | 0))
    return this._probeForAdding$1$bailout(2, key, t3, t1);
  hash = (t1 & t3 - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._probeForAdding$1$bailout(3, numberOfProbes, key, insertionIndex, t1, hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CONSTANT4)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(4, key, insertionIndex, hash, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      key = env0;
      break;
    case 3:
      hash = env4;
      t1 = env3;
      insertionIndex = env2;
      key = env1;
      numberOfProbes = env0;
      break;
    case 4:
      numberOfProbes0 = env3;
      hash = env2;
      insertionIndex = env1;
      key = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.ArgumentError$(null));
      t1 = $.getInterceptor(key).get$hashCode(key);
    case 1:
      state0 = 0;
      t3 = this._keys;
      t3 = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
    case 2:
      state0 = 0;
      hash = $.and(t1, $.sub(t3, 1));
      numberOfProbes = 1;
      insertionIndex = -1;
    default:
      var t1, key, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
            case 3:
              state0 = 0;
              existingKey = $.index(t1, hash);
              if (existingKey == null) {
                if ($.ltB(insertionIndex, 0))
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if ($.ltB(insertionIndex, 0) && existingKey === $.CONSTANT4)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              t1 = this._keys;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
            case 4:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var t1, t2, hash, numberOfProbes, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  t2 = this._keys;
  hash = $.and(t1, $.sub($.getInterceptor$JSStringJSArray(t2).get$length(t2), 1));
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, existingKey, numberOfProbes0, t1;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, t1, numberOfFree;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    t1 = this._keys;
    this._grow$1($.mul($.getInterceptor$JSStringJSArray(t1).get$length(t1), 2));
    return;
  }
  t1 = this._keys;
  numberOfFree = $.sub($.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), newNumberOfEntries), this._numberOfDeleted);
  if ($.gtB(this._numberOfDeleted, numberOfFree)) {
    t1 = this._keys;
    this._grow$1($.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _grow$1: function(newCapacity) {
  var t1, capacity, oldKeys, oldValues, t4, i, key, value, newIndex;
  t1 = this._keys;
  capacity = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof capacity !== 'number')
    return this._grow$1$bailout(1, newCapacity, capacity);
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  if (typeof oldKeys !== 'string' && (typeof oldKeys !== 'object' || oldKeys === null || oldKeys.constructor !== Array && !oldKeys.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(2, newCapacity, oldKeys, capacity);
  oldValues = this._values;
  if (typeof oldValues !== 'string' && (typeof oldValues !== 'object' || oldValues === null || oldValues.constructor !== Array && !oldValues.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(3, newCapacity, oldKeys, oldValues, capacity);
  t4 = $.List_List(newCapacity);
  $.setRuntimeTypeInfo(t4, []);
  this._keys = t4;
  t4 = $.List_List(newCapacity, $.getRuntimeTypeInfo(this)[1]);
  $.setRuntimeTypeInfo(t4, [$.getRuntimeTypeInfo(this)[1]]);
  this._values = t4;
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CONSTANT4)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    $.indexSet(this._keys, newIndex, key);
    $.indexSet(this._values, newIndex, value);
  }
  this._numberOfDeleted = 0;
},
 _grow$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      capacity = env1;
      newCapacity = env0;
      break;
    case 2:
      capacity = env2;
      oldKeys = env1;
      newCapacity = env0;
      break;
    case 3:
      capacity = env3;
      oldValues = env2;
      oldKeys = env1;
      newCapacity = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._keys;
      capacity = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 1:
      state0 = 0;
      this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
      oldKeys = this._keys;
    case 2:
      state0 = 0;
      oldValues = this._values;
    case 3:
      var t1, capacity, newCapacity, oldKeys, oldValues, t4, i, key, value, newIndex;
      state0 = 0;
      t4 = $.List_List(newCapacity);
      $.setRuntimeTypeInfo(t4, []);
      this._keys = t4;
      t4 = $.List_List(newCapacity, $.getRuntimeTypeInfo(this)[1]);
      $.setRuntimeTypeInfo(t4, [$.getRuntimeTypeInfo(this)[1]]);
      this._values = t4;
      for (i = 0; $.ltB(i, capacity); ++i) {
        key = $.index(oldKeys, i);
        if (key == null || key === $.CONSTANT4)
          continue;
        value = $.index(oldValues, i);
        newIndex = this._probeForAdding$1(key);
        $.indexSet(this._keys, newIndex, key);
        $.indexSet(this._values, newIndex, value);
      }
      this._numberOfDeleted = 0;
  }
},
 clear$0: function() {
  var t1, length$, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof length$ !== 'number')
    return this.clear$0$bailout(1, length$);
  for (i = 0; i < length$; ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 clear$0$bailout: function(state0, length$) {
  var i;
  for (i = 0; $.ltB(i, length$); ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 operator$indexSet$2: function(key, value) {
  var index;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  if ($.index(this._keys, index) == null || $.index(this._keys, index) === $.CONSTANT4)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  $.indexSet(this._keys, index, key);
  $.indexSet(this._values, index, value);
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  return $.index(this._values, index);
},
 remove$1: function(key) {
  var index, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = $.sub(this._numberOfEntries, 1);
    value = $.index(this._values, index);
    $.indexSet(this._values, index, null);
    $.indexSet(this._keys, index, $.CONSTANT4);
    this._numberOfDeleted = $.add(this._numberOfDeleted, 1);
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var t1, length$, i, key;
  t1 = this._keys;
  length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof length$ !== 'number')
    return this.forEach$1$bailout(1, f, length$);
  for (i = 0; i < length$; ++i) {
    key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CONSTANT4))
      f.call$2(key, $.index(this._values, i));
  }
},
 forEach$1$bailout: function(state0, f, length$) {
  var i, key;
  for (i = 0; $.ltB(i, length$); ++i) {
    key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CONSTANT4))
      f.call$2(key, $.index(this._values, i));
  }
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length(), $.getRuntimeTypeInfo(this)[0]);
  $.setRuntimeTypeInfo(list, [$.getRuntimeTypeInfo(this)[0]]);
  t1.i_0 = 0;
  this.forEach$1(new $._HashMapImpl_keys_anon(t1, list));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  var t1 = $.List_List(8);
  $.setRuntimeTypeInfo(t1, []);
  this._keys = t1;
  t1 = $.List_List(8, $.getRuntimeTypeInfo(this)[1]);
  $.setRuntimeTypeInfo(t1, [$.getRuntimeTypeInfo(this)[1]]);
  this._values = t1;
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":"Object;"
};

$$._KeyValuePair = {"":"Object;key>,value="
};

$$._LinkedHashMapImpl = {"":"Object;_list,_map",
 operator$indexSet$2: function(key, value) {
  var t1;
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    t1 = this._list;
    $.getInterceptor$JSArray(t1).addLast$1(t1, $._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 get$keys: function() {
  var t1, list, t2;
  t1 = {};
  list = $.List_List(this.get$length(), $.getRuntimeTypeInfo(this)[0]);
  $.setRuntimeTypeInfo(list, [$.getRuntimeTypeInfo(this)[0]]);
  t1.index_0 = 0;
  t2 = this._list;
  $.getInterceptor$JSArray(t2).forEach$1(t2, new $._LinkedHashMapImpl_keys_anon(t1, list));
  return list;
},
 forEach$1: function(f) {
  var t1 = this._list;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._list;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  var t1, t2;
  t1 = $.getRuntimeTypeInfo(this)[0];
  t2 = $.getRuntimeTypeInfo(this);
  this._map = $.HashMap_HashMap(t1, [$.DoubleLinkedQueueEntry, [$._KeyValuePair, t2[0], t2[1]]]);
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"":";",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"":"Object;_previous=,_next=,_element>",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":"DoubleLinkedQueueEntry;_previous,_next,_element",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":"Object;_sentinel",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_0 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_0;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 filter$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      t1.addLast$1(other, entry.get$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":"Object;_sentinel,_currentEntry",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._HashSetImpl = {"":"Object;_backingMap>",
 clear$0: function() {
  var t1 = this._backingMap;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 add$1: function(value) {
  var t1 = this._backingMap;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.add$1$bailout(1, t1, value);
  if (value !== (value | 0))
    throw $.iae(value);
  if (value < 0 || value >= t1.length)
    throw $.ioore(value);
  t1[value] = value;
},
 add$1$bailout: function(state0, t1, value) {
  $.indexSet(t1, value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, new $._HashSetImpl_addAll_anon(this));
},
 forEach$1: function(f) {
  var t1 = this._backingMap;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._HashSetImpl_forEach_anon(f));
},
 filter$1: function(f) {
  var result, t1;
  result = $.Set_Set($.getRuntimeTypeInfo(this)[0]);
  t1 = this._backingMap;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._HashSetImpl_filter_anon(result, f));
  return result;
},
 get$isEmpty: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 iterator$0: function() {
  return $._HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$($.getRuntimeTypeInfo(this)[0], $.getRuntimeTypeInfo(this)[0]);
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"":"Object;_entries,_nextValidIndex",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  t3 = $.getInterceptor$JSStringJSArray(t2);
  if ($.geB(t1, t3.get$length(t2)))
    return false;
  if ($.index(t2, this._nextValidIndex) === $.CONSTANT4)
    this._advance$0();
  return $.lt(this._nextValidIndex, t3.get$length(t2));
},
 next$0: function() {
  var t1, t3, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout1(1, t1);
  t3 = this._nextValidIndex;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  res = t1[t3];
  this._advance$0();
  return res;
},
 next$0$bailout1: function(state0, t1) {
  var res = $.index(t1, this._nextValidIndex);
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._advance$0$bailout(1, t1);
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CONSTANT4);
},
 _advance$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      length$ = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._entries;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, length$, t2, entry;
      state0 = 0;
      do {
        t2 = this._nextValidIndex + 1;
        this._nextValidIndex = t2;
        if ($.geB(t2, length$))
          break;
        entry = $.index(t1, this._nextValidIndex);
      } while (entry == null || entry === $.CONSTANT4);
  }
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._StringBufferImpl = {"":"Object;_buffer,_length",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  this._length = $.add(this._length, $.getInterceptor$JSStringJSArray(str).get$length(str));
  return this;
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(objects).iterator$0(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  var t1 = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(t1, ['$.String']);
  this._buffer = t1;
  this._length = 0;
  return this;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"":"Object;",
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 indexOf$2: function(receiver, a0, a1) {
  return receiver.indexOf$2(a0, a1);
},
 startsWith$1: function(receiver, a0) {
  return receiver.startsWith$1(a0);
},
 get$isNaN: function(receiver) {
  return receiver.get$isNaN();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 contains$2: function(receiver, a0, a1) {
  return receiver.contains$2(a0, a1);
},
 toInt$0: function(receiver) {
  return receiver.toInt$0();
},
 get$length: function(receiver) {
  return receiver.get$length();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 getRange$2: function(receiver, a0, a1) {
  return receiver.getRange$2(a0, a1);
},
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 get$last: function(receiver) {
  return receiver.get$last();
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 allMatches$1: function(receiver, a0) {
  return receiver.allMatches$1(a0);
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 contains$1: function(receiver, a0) {
  return receiver.contains$1(a0);
},
 get$isInfinite: function(receiver) {
  return receiver.get$isInfinite();
},
 addAll$1: function(receiver, a0) {
  return receiver.addAll$1(a0);
},
 round$0: function(receiver) {
  return receiver.round$0();
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 split$1: function(receiver, a0) {
  return receiver.split$1(a0);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 trim$0: function(receiver) {
  return receiver.trim$0();
},
 filter$1: function(receiver, a0) {
  return receiver.filter$1(a0);
},
 get$isNegative: function(receiver) {
  return receiver.get$isNegative();
}
};

$$.JSFunction = {"":"Object;",
 toString$0: function(receiver) {
  return "Closure";
}
};

$$.JSBool = {"":"Object;",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {"":"Object;",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {"":"Object;",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addAll$1: function(receiver, collection) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;)
    $.CONSTANT1.add$1(receiver, t1.next$0());
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if (end > receiver.length)
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 get$last: function(receiver) {
  var t1, t2;
  t1 = receiver.length;
  t2 = t1 - 1;
  if (t2 < 0)
    throw $.ioore(t2);
  return receiver[t2];
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 contains$1: function(receiver, other) {
  var i;
  for (i = 0; i < receiver.length; ++i)
    if ($.eqB(other, receiver[i]))
      return true;
  return false;
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {"":"Object;",
 get$isNegative: function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
},
 get$isNaN: function(receiver) {
  return isNaN(receiver);
},
 toInt$0: function(receiver) {
  var truncated;
  if (this.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$("NaN"));
  if (this.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$("Infinity"));
  truncated = this.truncate$0(receiver);
  return truncated == -0.0 ? 0 : truncated;
},
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 get$isInfinite: function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
},
 round$0: function(receiver) {
  if (receiver < 0)
    return -Math.round(-receiver);
  else
    return Math.round(receiver);
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {"":"JSNumber;"
};

$$.JSDouble = {"":"JSNumber;"
};

$$.JSString = {"":"Object;",
 charCodeAt$1: function(receiver, index) {
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 split$1: function(receiver, pattern) {
  $.checkNull(pattern);
  return receiver.split(pattern);
},
 startsWith$1: function(receiver, other) {
  var otherLength;
  $.checkString(other);
  otherLength = other.length;
  if (otherLength > receiver.length)
    return false;
  return other == receiver.substring(0, otherLength);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 trim$0: function(receiver) {
  return receiver.trim();
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 contains$1: function($receiver, other) {
  return this.contains$2($receiver, other, 0);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 is$String: true
};

$$.SunColor = {"":"Object;r=,g=,b=",
 toString$0: function() {
  return $.S(this.r) + ", " + $.S(this.g) + ", " + $.S(this.b);
},
 toRgba$0: function() {
  return "rgba(" + $.S(this.r) + ", " + $.S(this.g) + ", " + $.S(this.b) + ", 1.0)";
},
 SunColor$parse$1: function(data) {
  var tokens = $.getInterceptor$JSString(data).split$1(data, ",");
  this.r = $.int_parse($.index(tokens, 0));
  this.g = $.int_parse($.index(tokens, 1));
  this.b = $.int_parse($.index(tokens, 2));
}
};

$$.BodyElementEvents = {"":"ElementEvents;_ptr",
 get$blur: function() {
  return this.operator$index$1("blur");
},
 get$focus: function() {
  return this.operator$index$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
}
};

$$.DocumentEvents = {"":"ElementEvents;_ptr"
};

$$._FrozenCssClassSet = {"":"CssClassSet;",
 writeClasses$1: function(s) {
  throw $.$$throw($.UnsupportedError$("frozen class set cannot be modified"));
},
 readClasses$0: function() {
  return $.Set_Set('$.String');
}
};

$$._ChildrenElementList = {"":"Object;_liblib$_element>,_childElements",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $.List_List(t3);
  $.setRuntimeTypeInfo(output, []);
  len = t1.length;
  i = 0;
  for (; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      len = env2;
      output = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._childElements;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      output = $.List_List(t3.get$length(t1));
      $.setRuntimeTypeInfo(output, []);
      len = t3.get$length(t1);
    case 2:
      var t1, t3, output, len, i, t2;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t2 = $.index(t1, i);
        if (i >= output.length)
          throw $.ioore(i);
        output[i] = t2;
      }
      return output;
  }
},
 contains$1: function(element) {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this._childElements, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(f, output);
  for (t2 = this._childElements, t2 = $.getInterceptor$JSArray(t2).iterator$0(t2); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 get$isEmpty: function() {
  return this._liblib$_element.firstElementChild == null;
},
 get$length: function() {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._liblib$_element.$$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 add$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  var t1 = this._toList$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._liblib$_element; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 clear$0: function() {
  this._liblib$_element.textContent = "";
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    this._liblib$_element.$$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._liblib$_element.lastElementChild;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":"Object;_nodeList",
 contains$1: function(element) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 get$isEmpty: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 set$length: function(newLength) {
  var t1 = this._nodeList;
  $.getInterceptor$JSArray(t1).set$length(t1, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(""));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 get$last: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":"Object;_liblib$_list,_index",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._liblib$_list;
  t2 = this._index;
  if (typeof t2 !== 'number')
    return this.next$0$bailout2(1, t2, t1);
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 next$0$bailout2: function(state0, t2, t1) {
  this._index = $.add(t2, 1);
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  var t1, t2;
  t1 = this._index;
  t2 = this._liblib$_list;
  return $.lt(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2));
}
};

$$._ElementCssClassSet = {"":"CssClassSet;_liblib$_element>",
 readClasses$0: function() {
  var s, classname, t1, t2, t3, trimmed;
  s = $.Set_Set('$.String');
  classname = this._liblib$_element.className;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list, t1;
  list = $.List_List$from(s);
  $.setRuntimeTypeInfo(list, []);
  t1 = $.Strings_join(list, " ");
  this._liblib$_element.className = t1;
}
};

$$.ElementEvents = {"":"Events;_ptr",
 get$blur: function() {
  return this.operator$index$1("blur");
},
 get$change: function() {
  return this.operator$index$1("change");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$focus: function() {
  return this.operator$index$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
},
 get$mouseUp: function() {
  return this.operator$index$1("mouseup");
}
};

$$.Events = {"":"Object;_ptr",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"":"Object;_ptr,_type",
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
},
 remove$2: function(listener, useCapture) {
  this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener, false);
}
};

$$.FrameSetElementEvents = {"":"ElementEvents;_ptr",
 get$blur: function() {
  return this.operator$index$1("blur");
},
 get$focus: function() {
  return this.operator$index$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
}
};

$$.InputElementEvents = {"":"ElementEvents;_ptr"
};

$$.LocalWindowEvents = {"":"Events;_ptr",
 get$blur: function() {
  return this.operator$index$1("blur");
},
 get$change: function() {
  return this.operator$index$1("change");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$focus: function() {
  return this.operator$index$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
},
 get$mouseUp: function() {
  return this.operator$index$1("mouseup");
}
};

$$.MediaElementEvents = {"":"ElementEvents;_ptr"
};

$$._ChildNodeListLazy = {"":"Object;_this",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.textContent = "";
},
 operator$indexSet$2: function(index, value) {
  this._this.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 get$length: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
},
 operator$index$1: function(index) {
  return $.index(this._this.childNodes, index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._AttributeMap = {"":"Object;_liblib$_element>",
 clear$0: function() {
  for (var t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    this.remove$1(t1.next$0());
},
 forEach$1: function(f) {
  var t1, t2;
  for (t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    f.call$2(t2, this.operator$index$1(t2));
  }
},
 get$keys: function() {
  var attributes, keys, len, i;
  attributes = this._liblib$_element.attributes;
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  keys = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(keys, ['$.String']);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    if (this._matches$1(attributes[i]) === true) {
      if (i >= attributes.length)
        throw $.ioore(i);
      keys.push(attributes[i].get$$$dom_localName());
    }
  }
  return keys;
},
 get$keys$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      keys = env2;
      attributes = env1;
      len = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._liblib$_element.attributes;
    case 1:
      state0 = 0;
      keys = $.List_List(null, '$.String');
      $.setRuntimeTypeInfo(keys, ['$.String']);
      len = $.getInterceptor$JSStringJSArray(attributes).get$length(attributes);
    case 2:
      var attributes, keys, len, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i)
        if (this._matches$1($.index(attributes, i)) === true)
          keys.push($.index(attributes, i).get$$$dom_localName());
      return keys;
  }
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"":"_AttributeMap;_liblib$_element",
 containsKey$1: function(key) {
  return this._liblib$_element.$$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._liblib$_element.$$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._liblib$_element.$$dom_setAttribute$2(key, $.S(value));
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._liblib$_element;
  value = t1.$$dom_getAttribute$1(key);
  t1.$$dom_removeAttribute$1(key);
  return value;
},
 get$length: function() {
  var t1 = this.get$keys();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 _matches$1: function(node) {
  return node.get$$$dom_namespaceUri() == null;
}
};

$$.CssClassSet = {"":"Object;",
 toString$0: function() {
  var t1 = $.List_List$from(this.readClasses$0());
  $.setRuntimeTypeInfo(t1, []);
  return $.Strings_join(t1, " ");
},
 iterator$0: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 forEach$1: function(f) {
  var t1 = this.readClasses$0();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 contains$1: function(value) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, value);
},
 add$1: function(value) {
  this._modify$1(new $.CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s, result;
  s = this.readClasses$0();
  result = s.remove$1(value);
  this.writeClasses$1(s);
  return result;
},
 addAll$1: function(collection) {
  this._modify$1(new $.CssClassSet_addAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $.CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this.readClasses$0();
  f.call$1(s);
  this.writeClasses$1(s);
},
 is$Collection: function() { return true; }
};

$$._TypedImageData = {"":"Object;data>,height>,width>",
 is$_TypedImageData: true,
 is$ImageData: function() { return true; }
};

$$._DOMWindowCrossFrame = {"":"Object;_window",
 get$top: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.top);
}
};

$$.FixedSizeListIterator = {"":"_VariableSizeListIterator;_liblib$_length,_array,_pos",
 get$hasNext: function() {
  return $.gt(this._liblib$_length, this._pos);
}
};

$$._VariableSizeListIterator = {"":"Object;",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t3, t1);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = this._pos;
    case 2:
      var t1, t3;
      state0 = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$.FilteredElementList = {"":"Object;_node,_childNodes",
 get$_filtered: function() {
  var t1, t2;
  t1 = this._childNodes;
  t2 = $.List_List$from($.getInterceptor$JSArray(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
  $.setRuntimeTypeInfo(t2, []);
  return t2;
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.getInterceptor$JSStringJSArray(this).get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$("Invalid list length"));
  this.removeRange$2(newLength, $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 get$add: function() {
  return new $.BoundClosure0(this, 'add$1');
},
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, this.get$add());
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 contains$1: function(element) {
  var t1, t2;
  if (typeof element === 'object' && element !== null && element.is$Element()) {
    t1 = this._childNodes;
    t2 = $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 get$last: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._AttributeClassSet = {"":"CssClassSet;_liblib1$_element>",
 readClasses$0: function() {
  var classname, s, t1, t2, t3, trimmed;
  classname = $.index(this._liblib1$_element.get$attributes(), "class");
  s = $.Set_Set('$.String');
  if (classname == null)
    return s;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list = $.List_List$from(s);
  $.setRuntimeTypeInfo(list, []);
  $.indexSet(this._liblib1$_element.get$attributes(), "class", $.Strings_join(list, " "));
}
};

$$.PropertyGrid = {"":"Object;elementClient,elementBase>,grid>,elementGridWrapper,elementDescriptionWrapper,elementDescription,_model,itemControllers,_selectedPropertyItem",
 set$description: function(value) {
  this.elementDescription.set$innerHtml(value);
  return value;
},
 get$model: function() {
  return this._model;
},
 set$model: function(value) {
  this._model = value;
  this._bindModel$0();
},
 _bindModel$0: function() {
  var t1, itemsByCategory, t2, t3, t4, categoryList, categoryElement, categoryItems;
  t1 = this.itemControllers;
  $.CONSTANT1.forEach$1(t1, new $.PropertyGrid__bindModel_anon());
  $.CONSTANT1.clear$0(t1);
  t1 = this.grid.get$nodes();
  $.getInterceptor$JSArray(t1).clear$0(t1);
  this._clearSelectedItem$0();
  this.set$description("");
  if (this._model == null)
    return;
  itemsByCategory = $.Map_Map('$.String', ['$.List', $.PropertyItem]);
  if (typeof itemsByCategory !== 'object' || itemsByCategory === null || (itemsByCategory.constructor !== Array || !!itemsByCategory.immutable$list) && !itemsByCategory.is$JavaScriptIndexingBehavior())
    return this._bindModel$0$bailout(1, itemsByCategory);
  for (t1 = this._model.get$items(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (itemsByCategory.containsKey$1(t2.get$category()) !== true) {
      t3 = t2.get$category();
      t4 = $.List_List(null, $.PropertyItem);
      $.setRuntimeTypeInfo(t4, [$.PropertyItem]);
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= itemsByCategory.length)
        throw $.ioore(t3);
      itemsByCategory[t3] = t4;
    }
    t3 = t2.get$category();
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= itemsByCategory.length)
      throw $.ioore(t3);
    t3 = itemsByCategory[t3];
    $.getInterceptor$JSArray(t3).add$1(t3, t2);
  }
  categoryList = itemsByCategory.get$keys();
  t1 = itemsByCategory.get$keys();
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  t2 = this.get$model().get$preferedOrder();
  if ($.eqB(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2)))
    categoryList = this.get$model().get$preferedOrder();
  for (t1 = $.getInterceptor$JSArray(categoryList).iterator$0(categoryList); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    categoryElement = this._insertCategoryElement$1(t2);
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= itemsByCategory.length)
      throw $.ioore(t2);
    categoryItems = itemsByCategory[t2];
    for (t2 = $.getInterceptor$JSArray(categoryItems).iterator$0(categoryItems); t2.get$hasNext() === true;)
      this._insertPropertyItem$2(t2.next$0(), categoryElement);
  }
},
 _bindModel$0$bailout: function(state0, itemsByCategory) {
  var t1, t2, t3, t4, categoryList, categoryElement, categoryItems;
  for (t1 = this._model.get$items(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (itemsByCategory.containsKey$1(t2.get$category()) !== true) {
      t3 = t2.get$category();
      t4 = $.List_List(null, $.PropertyItem);
      $.setRuntimeTypeInfo(t4, [$.PropertyItem]);
      $.indexSet(itemsByCategory, t3, t4);
    }
    t3 = $.index(itemsByCategory, t2.get$category());
    $.getInterceptor$JSArray(t3).add$1(t3, t2);
  }
  categoryList = itemsByCategory.get$keys();
  t1 = itemsByCategory.get$keys();
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  t2 = this.get$model().get$preferedOrder();
  if ($.eqB(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2)))
    categoryList = this.get$model().get$preferedOrder();
  for (t1 = $.getInterceptor$JSArray(categoryList).iterator$0(categoryList); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    categoryElement = this._insertCategoryElement$1(t2);
    categoryItems = $.index(itemsByCategory, t2);
    for (t2 = $.getInterceptor$JSArray(categoryItems).iterator$0(categoryItems); t2.get$hasNext() === true;)
      this._insertPropertyItem$2(t2.next$0(), categoryElement);
  }
},
 _insertCategoryElement$1: function(category) {
  var categoryBody, categoryRow, t1, header, expandIcon, headerElement, categoryItemBody;
  categoryBody = this.grid.createTBody$0();
  categoryRow = $.TableRowElement_TableRowElement();
  t1 = categoryRow.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item");
  t1 = categoryRow.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-category");
  header = $.TableCellElement_TableCellElement();
  header.set$colSpan(2);
  t1 = categoryRow.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, header);
  expandIcon = $.DivElement_DivElement();
  t1 = expandIcon.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-category-icon");
  t1 = expandIcon.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-icon-minus");
  t1 = header.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, expandIcon);
  headerElement = $.DivElement_DivElement();
  headerElement.set$innerHtml(category);
  t1 = header.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, headerElement);
  t1 = categoryRow.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, header);
  t1 = categoryBody.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, categoryRow);
  t1 = this.grid.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, categoryBody);
  categoryItemBody = this.grid.createTBody$0();
  t1 = categoryItemBody.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-category-body");
  t1 = this.grid.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, categoryItemBody);
  t1 = categoryRow.get$on().get$click();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.PropertyGrid__insertCategoryElement_anon(categoryItemBody, "property-grid-icon-minus", expandIcon, "property-grid-icon-plus"));
  return categoryItemBody;
},
 _insertPropertyItem$2: function(model, parent$) {
  var name$, cellName, t1, cellNameText, cellValue, row, itemController;
  name$ = model.get$name();
  model.getValue$0();
  cellName = $.TableCellElement_TableCellElement();
  t1 = cellName.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-name");
  cellNameText = $.DivElement_DivElement();
  cellNameText.set$innerHtml(name$);
  t1 = cellNameText.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-name-text");
  t1 = cellName.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, cellNameText);
  cellValue = $.TableCellElement_TableCellElement();
  t1 = cellValue.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-value");
  row = $.TableRowElement_TableRowElement();
  t1 = row.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item");
  t1 = row.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, cellName);
  t1 = row.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, cellValue);
  t1 = parent$.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, row);
  itemController = $.PropertyItemController$(this, model, cellName, cellValue);
  this.itemControllers.push(itemController);
},
 _clearSelectedItem$0: function() {
  var t1 = this._selectedPropertyItem;
  if (!(t1 == null))
    t1.setSelected$1(false);
  this._selectedPropertyItem = null;
  this.elementDescription.set$innerHtml("");
},
 onItemSelected$1: function(controller) {
  var t1;
  this._clearSelectedItem$0();
  this._selectedPropertyItem = controller;
  t1 = controller.get$model().get$description();
  this.elementDescription.set$innerHtml(t1);
  controller.setSelected$1(true);
},
 PropertyGrid$1: function(elementClient) {
  var t1;
  this.elementBase = $.DivElement_DivElement();
  t1 = this.elementBase.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-base");
  t1 = this.elementClient.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementBase);
  this.elementGridWrapper = $.DivElement_DivElement();
  t1 = this.elementGridWrapper.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-wrapper");
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementGridWrapper);
  this.grid = $.TableElement_TableElement();
  t1 = this.grid.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid");
  t1 = this.elementGridWrapper.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.grid);
  this.elementDescription = $.DivElement_DivElement();
  t1 = this.elementDescription.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-description");
  this.elementDescriptionWrapper = $.DivElement_DivElement();
  t1 = this.elementDescriptionWrapper.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementDescription);
  t1 = this.elementDescriptionWrapper.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-description-wrapper");
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementDescriptionWrapper);
}
};

$$.PropertyGridException = {"":"Object;message",
 toString$0: function() {
  return this.message;
}
};

$$.PropertyGridModel = {"":"Object;items>,preferedOrder>",
 register$8$category$description$editorConfig: function(name$, getter, setter, viewType, editorType, category, description, editorConfig) {
  var item, t1;
  item = $.PropertyItem$(name$, getter, setter, viewType, editorType, category, description, editorConfig);
  this.items.push(item);
  t1 = this.preferedOrder;
  if ($.CONSTANT1.contains$1(t1, item.category) !== true)
    t1.push(item.category);
},
 register$7$category$description: function(name$, getter, setter, viewType, editorType, category, description) {
  return this.register$8$category$description$editorConfig(name$, getter, setter, viewType, editorType, category, description, null);
}
};

$$.PropertyItem = {"":"Object;name>,getValue,setValue,editorType>,editorConfig>,viewType>,description>,category>",
 getValue$0: function() {
  return this.getValue.call$0();
},
 setValue$1: function(arg0) {
  return this.setValue.call$1(arg0);
},
 PropertyItem$8$category$description$editorConfig: function(name$, getValue, setValue, viewType, editorType, category, description, editorConfig) {
  if (this.category == null)
    this.category = "Misc";
}
};

$$.PropertyItemController = {"":"Object;grid>,model>,view>,editor,elementCellName,elementCellValue>,selected,selectedCssClass",
 dispose$0: function() {
  var t1 = this.view;
  if (!(t1 == null))
    t1.dispose$0();
  t1 = this.editor;
  if (!(t1 == null))
    t1.dispose$0();
},
 onViewClicked$0: function() {
  var t1 = this.editor;
  if (!(t1 == null))
    t1.showEditor$0();
},
 setSelected$1: function(selected) {
  var t1, t2;
  this.selected = selected;
  t1 = this.elementCellName;
  t2 = this.selectedCssClass;
  if (selected) {
    t1 = t1.get$classes();
    $.getInterceptor$JSArray(t1).add$1(t1, t2);
  } else
    t1.get$classes().remove$1(t2);
},
 setViewVisible$1: function(visible) {
  var t1 = visible ? "block" : "none";
  this.view.get$elementView().get$style().set$display(t1);
},
 requestValueChange$1: function(value) {
  this.model.setValue$1(value);
  this.view.refresh$0();
},
 finishEditing$1: function(value) {
  this.editor.hideEditor$0();
  this.model.setValue$1(value);
  this.view.refresh$0();
},
 PropertyItemController$4: function(grid, model, elementCellName, elementCellValue) {
  var t1, t2;
  this.view = $.PropertyItemViewFactory_create(this, this.model.get$viewType(), this.elementCellValue);
  t1 = this.model;
  this.editor = $.PropertyItemEditorFactory_create(this, t1.get$editorType(), t1.get$editorConfig());
  t2 = this.elementCellName.get$on().get$click();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.anon(this));
  t2 = this.view.get$elementView().get$on().get$click();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.anon0(this));
}
};

$$.PropertyItemViewBase = {"":"Object;controller>,elementView>",
 _initialize$0: function() {
  if (this.elementView == null)
    throw $.$$throw($.Exception_Exception("View element has not been created yet"));
  this._handlerOnClick = this.get$_onMouseClick();
  var t1 = this.elementView.get$on().get$click();
  $.getInterceptor$JSArray(t1).add$1(t1, this._handlerOnClick);
},
 dispose$0: function() {
  this.elementView.get$on().get$click().remove$1(this._handlerOnClick);
  this.elementView.remove$0();
  this.elementView = null;
},
 _onMouseClick$1: function(e) {
  this.controller.onViewClicked$0();
  e.preventDefault$0();
  e.stopPropagation$0();
},
 get$_onMouseClick: function() {
  return new $.BoundClosure0(this, '_onMouseClick$1');
}
};

$$.PropertyItemEditorBase = {"":"Object;controller>"
};

$$.PropertyEditorColor = {"":"PropertyItemEditorBase;elementEditor,elementEditorInnerWrapper,editing>,colorPicker>,controller",
 showEditor$0: function() {
  var t1, cell, t2, left, top$, editorWidth, initialColor, t3;
  t1 = this.controller;
  cell = t1.elementCellValue;
  this.elementEditor.get$style().set$left("0px");
  t2 = $.document().get$body().get$nodes();
  $.getInterceptor$JSArray(t2).add$1(t2, this.elementEditor);
  left = $._getElementPageLeft(cell);
  top$ = $.add($._getElementPageTop(cell), t1.view.get$elementView().get$clientHeight());
  editorWidth = this.elementEditor.get$clientWidth();
  if ($.gtB($.add(left, editorWidth), $.window().get$innerWidth()))
    left = $.sub($.document().get$body().get$clientWidth(), editorWidth);
  cell.get$clientWidth();
  t2 = $.S(left) + "px";
  this.elementEditor.get$style().set$left(t2);
  t2 = $.S(top$) + "px";
  this.elementEditor.get$style().set$top(t2);
  this.elementEditor.focus$0();
  initialColor = $.ColorValue$from(t1.model.getValue$0());
  this.colorPicker.set$currentColor(initialColor);
  this.colorPicker.picker.set$color(initialColor);
  t2 = this.colorPicker;
  t3 = t2.picker.get$hue();
  t2.hueSlider.set$hueAngle(t3);
  t3 = this.elementEditor.get$on().get$blur();
  $.getInterceptor$JSArray(t3).add$1(t3, new $.PropertyEditorColor_showEditor_anon(this));
  t3 = this.elementEditor.get$on().get$keyDown();
  $.getInterceptor$JSArray(t3).add$1(t3, new $.PropertyEditorColor_showEditor_anon0(this));
  t3 = new $.PropertyEditorColor_showEditor_anon1(this);
  this.colorPicker.set$colorChangeListener(t3);
  this.editing = true;
},
 hideEditor$0: function() {
  if (!this.editing)
    return;
  this.editing = false;
  this.elementEditor.remove$0();
},
 _notifyFinishEditing$0: function() {
  if (this.editing)
    this.controller.finishEditing$1(this.colorPicker.get$currentColor().toRgbString$0());
},
 dispose$0: function() {
  this.editing = false;
},
 PropertyEditorColor$1: function(controller) {
  var t1, colorPickerSize;
  if (!(controller.get$model().get$editorConfig() == null)) {
    t1 = controller.get$model().get$editorConfig();
    t1 = typeof t1 === 'number';
  } else
    t1 = false;
  if (t1) {
    t1 = controller.get$model().get$editorConfig();
    colorPickerSize = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  } else
    colorPickerSize = 128;
  this.colorPicker = $.ColorPicker$(colorPickerSize, null, false);
  this.elementEditorInnerWrapper = $.DivElement_DivElement();
  t1 = this.elementEditorInnerWrapper.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-editor-color-picker");
  t1 = this.elementEditorInnerWrapper.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.colorPicker.element);
  this.elementEditor = $.DivElement_DivElement();
  t1 = this.elementEditor.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-editor-color-picker-host");
  this.elementEditor.set$tabIndex(1);
  t1 = this.elementEditor.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementEditorInnerWrapper);
}
};

$$.PropertyEditorSlider = {"":"PropertyItemEditorBase;elementEditor,slider>,editing>,factor>,controller",
 showEditor$0: function() {
  var t1, cell, t2, left, top$, width;
  t1 = this.controller;
  cell = t1.elementCellValue;
  t2 = $.document().get$body().get$nodes();
  $.getInterceptor$JSArray(t2).add$1(t2, this.elementEditor);
  left = $._getElementPageLeft(cell);
  top$ = $.add($._getElementPageTop(cell), t1.view.get$elementView().get$clientHeight());
  width = cell.get$clientWidth();
  t2 = $.S(left) + "px";
  this.elementEditor.get$style().set$left(t2);
  t2 = $.S(top$) + "px";
  this.elementEditor.get$style().set$top(t2);
  t2 = $.S(width) + "px";
  this.elementEditor.get$style().set$width(t2);
  this._setSliderValue$1(t1.model.getValue$0());
  this.elementEditor.focus$0();
  t2 = this.elementEditor.get$on().get$blur();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.PropertyEditorSlider_showEditor_anon(this));
  t2 = this.elementEditor.get$on().get$keyDown();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.PropertyEditorSlider_showEditor_anon0(this));
  t2 = this.slider.get$on().get$change();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.PropertyEditorSlider_showEditor_anon1(this));
  this.editing = true;
},
 hideEditor$0: function() {
  if (!this.editing)
    return;
  this.editing = false;
  this.elementEditor.remove$0();
},
 _notifyFinishEditing$0: function() {
  var t1, t2;
  if (this.editing) {
    t1 = this.controller;
    t2 = $.div($.int_parse(this.slider.get$value()), this.factor);
    t1.finishEditing$1($.getInterceptor(t2).toString$0(t2));
  }
},
 dispose$0: function() {
  this.editing = false;
},
 _setSliderValue$1: function(valueText) {
  var t1 = $.mul($.double_parse(valueText), this.factor);
  t1 = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  t1 = $.getInterceptor(t1).toString$0(t1);
  this.slider.set$value(t1);
},
 PropertyEditorSlider$1: function(controller) {
  var t1, sliderConfig, t2, minValue, maxValue;
  this.slider = $.InputElement_InputElement(null);
  this.slider.set$type("range");
  t1 = this.slider.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-editor-slider");
  sliderConfig = controller.get$model().get$editorConfig();
  if (!(sliderConfig == null)) {
    t1 = $.getRuntimeTypeInfo(sliderConfig);
    t2 = '$.num';
    t2 = $.isSubtype(t1[0], t2);
    t2 = typeof sliderConfig === 'object' && sliderConfig !== null && (sliderConfig.constructor === Array || sliderConfig.is$List()) && t2;
    t1 = t2;
  } else
    t1 = false;
  if (t1) {
    t1 = $.getInterceptor$JSStringJSArray(sliderConfig);
    if ($.geB(t1.get$length(sliderConfig), 2)) {
      minValue = $.index(sliderConfig, 0);
      maxValue = $.index(sliderConfig, 1);
      t2 = $.getInterceptor(minValue).toString$0(minValue);
      this.slider.set$min(t2);
      t2 = $.getInterceptor(maxValue).toString$0(maxValue);
      this.slider.set$max(t2);
      if ($.geB(t1.get$length(sliderConfig), 3))
        this.factor = $.index(sliderConfig, 2);
    }
  }
  this.elementEditor = $.DivElement_DivElement();
  t1 = this.elementEditor.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.slider);
  t1 = this.elementEditor.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-editor-slider-host");
  this.elementEditor.set$tabIndex(1);
}
};

$$.PropertyEditorSpinner = {"":"PropertyItemEditorBase;spinner>,editing>,controller",
 showEditor$0: function() {
  var t1, t2;
  t1 = this.controller;
  t1.setViewVisible$1(false);
  t2 = t1.elementCellValue.get$nodes();
  $.getInterceptor$JSArray(t2).add$1(t2, this.spinner);
  t2 = t1.model.getValue$0();
  t2 = $.getInterceptor(t2).toString$0(t2);
  this.spinner.set$value(t2);
  this.spinner.focus$0();
  t2 = this.spinner.get$on().get$blur();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.PropertyEditorSpinner_showEditor_anon(this));
  t2 = this.spinner.get$on().get$keyDown();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.PropertyEditorSpinner_showEditor_anon0(this));
  this.editing = true;
},
 hideEditor$0: function() {
  if (!this.editing)
    return;
  this.editing = false;
  this.spinner.remove$0();
  this.controller.setViewVisible$1(true);
},
 _notifyFinishEditing$0: function() {
  if (this.editing)
    this.controller.finishEditing$1(this.spinner.get$value());
},
 dispose$0: function() {
  this.editing = false;
},
 PropertyEditorSpinner$1: function(controller) {
  var t1, config, values, t2, valueText, option;
  this.spinner = $.SelectElement_SelectElement();
  t1 = this.spinner.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-editor-spinner");
  config = controller.get$model().get$editorConfig();
  if (!(config == null)) {
    values = config.call$0();
    for (t1 = $.getInterceptor$JSArray(values).iterator$0(values); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      valueText = $.getInterceptor(t2).toString$0(t2);
      option = $.OptionElement_OptionElement($, $, $, $);
      option.set$innerHtml(valueText);
      option.set$value(valueText);
      t2 = this.spinner.get$nodes();
      $.getInterceptor$JSArray(t2).add$1(t2, option);
    }
  }
  t1 = this.spinner.get$on().get$change();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.anon14(this, controller));
}
};

$$.PropertyEditorTextbox = {"":"PropertyItemEditorBase;textbox>,editing>,controller",
 showEditor$0: function() {
  var t1, t2;
  t1 = this.controller;
  t1.setViewVisible$1(false);
  t2 = t1.elementCellValue.get$nodes();
  $.getInterceptor$JSArray(t2).add$1(t2, this.textbox);
  t2 = t1.model.getValue$0();
  t2 = $.getInterceptor(t2).toString$0(t2);
  this.textbox.set$value(t2);
  this.textbox.focus$0();
  t2 = this.textbox.get$on().get$blur();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.PropertyEditorTextbox_showEditor_anon(this));
  t2 = this.textbox.get$on().get$keyDown();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.PropertyEditorTextbox_showEditor_anon0(this));
  this.editing = true;
},
 hideEditor$0: function() {
  if (!this.editing)
    return;
  this.editing = false;
  this.textbox.remove$0();
  this.controller.setViewVisible$1(true);
},
 _notifyFinishEditing$0: function() {
  if (this.editing)
    this.controller.finishEditing$1(this.textbox.get$value());
},
 dispose$0: function() {
  this.editing = false;
},
 PropertyEditorTextbox$1: function(controller) {
  var t1;
  this.textbox = $.InputElement_InputElement(null);
  t1 = this.textbox.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-editor-textbox");
}
};

$$.PropertyViewColor = {"":"PropertyItemViewBase;elementColorPreview,elementColorText,controller,elementCell,elementView,_handlerOnClick",
 refresh$0: function() {
  var value, t1;
  value = this.controller.model.getValue$0();
  t1 = $.getInterceptor(value).toString$0(value);
  this.elementColorText.set$innerHtml(t1);
  t1 = $.ColorValue$from(value).toString$0();
  this.elementColorPreview.get$style().set$backgroundColor(t1);
},
 PropertyViewColor$2: function(controller, elementCell) {
  var t1;
  this.elementView = $.DivElement_DivElement();
  t1 = this.elementView.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-view-color-base");
  t1 = elementCell.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementView);
  this.elementColorPreview = $.DivElement_DivElement();
  t1 = this.elementColorPreview.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-view-color-preview");
  t1 = this.elementView.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementColorPreview);
  this.elementColorText = $.DivElement_DivElement();
  t1 = this.elementColorText.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-view-color-text");
  t1 = this.elementView.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementColorText);
  this._initialize$0();
  this.refresh$0();
}
};

$$.PropertyViewLabel = {"":"PropertyItemViewBase;controller,elementCell,elementView,_handlerOnClick",
 refresh$0: function() {
  var value, t1;
  value = this.controller.model.getValue$0();
  t1 = $.getInterceptor(value).toString$0(value);
  this.elementView.set$innerHtml(t1);
},
 PropertyViewLabel$2: function(controller, elementCell) {
  var t1;
  this.elementView = $.DivElement_DivElement();
  t1 = this.elementView.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-item-view-label");
  t1 = elementCell.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementView);
  this._initialize$0();
  this.refresh$0();
}
};

$$.ColorPicker = {"":"Object;element>,initialColor,picker>,hueSlider>,infoBox,_colorChangeListener",
 set$currentColor: function(value) {
  var t1;
  this.picker.set$color(value);
  t1 = this.picker.get$hue();
  this.hueSlider.set$hueAngle(t1);
},
 get$currentColor: function() {
  return this.picker.get$color();
},
 get$colorChangeListener: function() {
  return this._colorChangeListener;
},
 colorChangeListener$4: function(arg0, arg1, arg2, arg3) {
  return this.get$colorChangeListener().call$4(arg0, arg1, arg2, arg3);
},
 set$colorChangeListener: function(value) {
  this._colorChangeListener = value;
  this.picker._notifyColorChanged$0();
},
 onColorChanged$4: function(color, hue, saturation, brightness) {
  this.infoBox.refresh$0();
  if (!(this.get$colorChangeListener() == null))
    this.colorChangeListener$4(color, hue, saturation, brightness);
},
 get$onColorChanged: function() {
  return new $.BoundClosure1(this, 'onColorChanged$4');
},
 dispose$0: function() {
  this.element.remove$0();
},
 ColorPicker$3$initialColor$showInfoBox: function(size, initialColor, showInfoBox) {
  var t1, dummyElement;
  this.picker = $.HsvGradientPicker$(size, size, this.initialColor);
  this.initialColor = $.ColorValue$copy(this.picker.get$color());
  this.hueSlider = $.HueSlider$(16, size);
  t1 = this.get$onColorChanged();
  this.picker.set$colorChangeListener(t1);
  t1 = this.picker;
  this.hueSlider.set$hueChangelistener(t1);
  t1 = this.picker.get$hue();
  this.hueSlider.set$hueAngle(t1);
  this.infoBox = $.ColorPickerInfoBox$(this);
  this.infoBox.refresh$0();
  this.element = $.DivElement_DivElement();
  t1 = this.element.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "color-picker");
  t1 = this.element.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.picker.get$canvas());
  t1 = this.element.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.hueSlider.get$canvas());
  t1 = this.element.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.infoBox.get$elementBase());
  if (!(showInfoBox == null) && showInfoBox !== true)
    this.infoBox.get$elementBase().get$style().set$display("none");
  dummyElement = $.DivElement_DivElement();
  dummyElement.get$style().set$clear("both");
  t1 = this.element.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, dummyElement);
}
};

$$.ColorPickerInfoBox = {"":"Object;colorPicker>,elementBase>,entryRed,entryGreen,entryBlue,entryHue,entrySaturation,entryBrightness,previewBase,previewPrevious,previewCurrent",
 get$color: function() {
  return this.colorPicker.picker.get$color();
},
 set$color: function(value) {
  var t1, t2;
  this.colorPicker.picker.set$color(value);
  t1 = this.colorPicker;
  t2 = t1.picker.get$hue();
  t1.hueSlider.set$hueAngle(t2);
  this.refresh$0();
},
 refresh$0: function() {
  var t1, t2, t3;
  this.entryRed.refresh$0();
  this.entryGreen.refresh$0();
  this.entryBlue.refresh$0();
  this.entryHue.refresh$0();
  this.entrySaturation.refresh$0();
  this.entryBrightness.refresh$0();
  t1 = this.previewPrevious;
  t2 = this.colorPicker.initialColor;
  t2 = $.getInterceptor(t2).toString$0(t2);
  t1.get$style().set$backgroundColor(t2);
  t2 = this.previewCurrent;
  t3 = this.colorPicker.picker.get$color();
  t3 = $.getInterceptor(t3).toString$0(t3);
  t2.get$style().set$backgroundColor(t3);
},
 ColorPickerInfoBox$1: function(colorPicker) {
  var t1;
  this.previewBase = $.DivElement_DivElement();
  this.previewPrevious = $.DivElement_DivElement();
  this.previewCurrent = $.DivElement_DivElement();
  t1 = this.previewBase.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "color-picker-preview-base");
  t1 = this.previewPrevious.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "color-picker-preview-previous");
  t1 = this.previewCurrent.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "color-picker-preview-current");
  t1 = this.previewBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.previewPrevious);
  t1 = this.previewBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.previewCurrent);
  this.entryRed = $.EntryControl$("R", new $.anon1(this), new $.anon2(this));
  this.entryGreen = $.EntryControl$("G", new $.anon3(this), new $.anon4(this));
  this.entryBlue = $.EntryControl$("B", new $.anon5(this), new $.anon6(this));
  this.entryHue = $.EntryControl$("H", new $.anon7(this), new $.anon8());
  this.entryHue.elementBase.get$style().set$marginTop("6px");
  this.entrySaturation = $.EntryControl$("S", new $.anon9(this), new $.anon10());
  this.entryBrightness = $.EntryControl$("V", new $.anon11(this), new $.anon12());
  this.elementBase = $.DivElement_DivElement();
  t1 = this.elementBase.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "color-picker-info-box");
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.previewBase);
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.entryRed.elementBase);
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.entryGreen.elementBase);
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.entryBlue.elementBase);
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.entryHue.elementBase);
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.entrySaturation.elementBase);
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.entryBrightness.elementBase);
}
};

$$.HsvGradientPicker = {"":"Object;hue>,chroma,saturation>,value=,_color,hueColor,cursorRadius,colorChangeListener<,canvas>,context,buffer,_cursorX,_cursorY,mouseListener",
 get$color: function() {
  return this._color;
},
 set$color: function(value) {
  this._color = value;
  this._rebuildColor$0();
  this._draw$0();
},
 colorChangeListener$4: function(arg0, arg1, arg2, arg3) {
  return this.colorChangeListener.call$4(arg0, arg1, arg2, arg3);
},
 _rebuildColor$0: function() {
  var t1, t2, t3;
  this._calculateHSV$1(true);
  this._rebuildGradient$0();
  t1 = $.mul(this.canvas.get$width(), this.saturation);
  this._cursorX = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  t2 = this.canvas.get$height();
  t3 = $.div(this.value, 255);
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t2 = $.mul(t2, 1 - t3);
  this._cursorY = $.getInterceptor$JSNumber(t2).toInt$0(t2);
},
 _rebuildGradient$0: function() {
  var height, width, intensityDelta, t3, _buffer, t1, h, index, intensity, greyScaleComponent, startColor, endColor, pixelIntensity, w, pixelColor, index0, t2;
  this.buffer = this.context.createImageData$2(this.canvas.get$width(), this.canvas.get$height());
  height = this.buffer.get$height();
  if (typeof height !== 'number')
    return this._rebuildGradient$0$bailout(1, height);
  width = this.buffer.get$width();
  if (typeof width !== 'number')
    return this._rebuildGradient$0$bailout(2, height, width);
  intensityDelta = 1 / (width - 1);
  t3 = this.buffer.get$data();
  _buffer = $.List_List($.getInterceptor$JSStringJSArray(t3).get$length(t3), '$.$int');
  $.setRuntimeTypeInfo(_buffer, ['$.$int']);
  for (t1 = height - 1, h = 0, index = 0; h < height; ++h) {
    intensity = (t1 - h) / t1;
    greyScaleComponent = $.CONSTANT2.toInt$0(255 * intensity);
    startColor = $.ColorValue$fromRGB(greyScaleComponent, greyScaleComponent, greyScaleComponent);
    endColor = $.mul(this.hueColor, intensity);
    if (typeof endColor !== 'number')
      return this._rebuildGradient$0$bailout(3, h, intensityDelta, index, _buffer, startColor, height, endColor, width);
    for (pixelIntensity = 0, w = 0; w < width; ++w) {
      if (typeof startColor !== 'number')
        throw $.iae(startColor);
      pixelColor = startColor.operator$add$1((endColor - startColor) * pixelIntensity);
      index0 = index + 1;
      t2 = pixelColor.get$r();
      t3 = _buffer.length;
      if (index < 0 || index >= t3)
        throw $.ioore(index);
      _buffer[index] = t2;
      index = index0 + 1;
      t2 = pixelColor.get$g();
      if (index0 < 0 || index0 >= t3)
        throw $.ioore(index0);
      _buffer[index0] = t2;
      index0 = index + 1;
      t2 = pixelColor.get$b();
      if (index < 0 || index >= t3)
        throw $.ioore(index);
      _buffer[index] = t2;
      index = index0 + 1;
      if (index0 < 0 || index0 >= t3)
        throw $.ioore(index0);
      _buffer[index0] = 255;
      pixelIntensity += intensityDelta;
    }
  }
  this.buffer.get$data().setElements$2(_buffer, 0);
},
 _rebuildGradient$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      height = env0;
      break;
    case 2:
      width = env1;
      height = env0;
      break;
    case 3:
      width = env7;
      endColor = env6;
      height = env5;
      startColor = env4;
      _buffer = env3;
      index = env2;
      intensityDelta = env1;
      h = env0;
      break;
  }
  switch (state0) {
    case 0:
      this.buffer = this.context.createImageData$2(this.canvas.get$width(), this.canvas.get$height());
      height = this.buffer.get$height();
    case 1:
      state0 = 0;
      width = this.buffer.get$width();
    case 2:
      state0 = 0;
      t3 = $.sub(width, 1);
      if (typeof t3 !== 'number')
        throw $.iae(t3);
      intensityDelta = 1 / t3;
      t3 = this.buffer.get$data();
      _buffer = $.List_List($.getInterceptor$JSStringJSArray(t3).get$length(t3), '$.$int');
      $.setRuntimeTypeInfo(_buffer, ['$.$int']);
      h = 0;
      index = 0;
    case 3:
      var height, width, t3, intensityDelta, _buffer, h, index, intensity, greyScaleComponent, startColor, endColor, pixelIntensity, w, pixelColor, index0, t1, t2;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(h, height))
                break L0;
              intensity = $.div($.sub($.sub(height, 1), h), $.sub(height, 1));
              if (typeof intensity !== 'number')
                throw $.iae(intensity);
              greyScaleComponent = $.CONSTANT2.toInt$0(255 * intensity);
              startColor = $.ColorValue$fromRGB(greyScaleComponent, greyScaleComponent, greyScaleComponent);
              endColor = $.mul(this.hueColor, intensity);
            case 3:
              state0 = 0;
              for (pixelIntensity = 0, w = 0; $.ltB(w, width); ++w) {
                pixelColor = startColor.operator$add$1($.mul($.sub(endColor, startColor), pixelIntensity));
                index0 = index + 1;
                t1 = pixelColor.get$r();
                t2 = _buffer.length;
                if (index < 0 || index >= t2)
                  throw $.ioore(index);
                _buffer[index] = t1;
                index = index0 + 1;
                t1 = pixelColor.get$g();
                if (index0 < 0 || index0 >= t2)
                  throw $.ioore(index0);
                _buffer[index0] = t1;
                index0 = index + 1;
                t1 = pixelColor.get$b();
                if (index < 0 || index >= t2)
                  throw $.ioore(index);
                _buffer[index] = t1;
                index = index0 + 1;
                if (index0 < 0 || index0 >= t2)
                  throw $.ioore(index0);
                _buffer[index0] = 255;
                pixelIntensity += intensityDelta;
              }
              ++h;
          }
      this.buffer.get$data().setElements$2(_buffer, 0);
  }
},
 _calculateHSV$1: function(calculateHue) {
  var t1, t2, t3, alpha, t4, t5, beta;
  t1 = this._color;
  this.value = $.max($.max(t1.get$r(), t1.get$g()), t1.get$b());
  if (calculateHue === true) {
    t1 = this._color;
    t2 = t1.get$r();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    t2 = 2 * t2;
    t3 = t1.get$g();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    t3 = t2 - t3;
    t1 = t1.get$b();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    alpha = (t3 - t1) / 2;
    t2 = $.sqrt(3) / 2;
    t4 = this._color;
    t5 = $.sub(t4.get$g(), t4.get$b());
    if (typeof t5 !== 'number')
      throw $.iae(t5);
    beta = t2 * t5;
    this.hue = $.atan2(beta, alpha);
    if ($.ltB(this.hue, 0))
      this.hue = $.add(this.hue, 6.283185307179586);
    this.chroma = $.sqrt(alpha * alpha + beta * beta);
    t1 = this.chroma;
    this.saturation = t1 === 0 ? 0 : $.div(t1, this.value);
  }
  this.hueColor = $._getHueColor(this.hue);
},
 _calculateHSV$0: function() {
  return this._calculateHSV$1(false);
},
 _draw$0: function() {
  this.context.putImageData$3(this.buffer, 0, 0);
  this._drawCursor$0();
},
 onHueChanged$1: function(angle) {
  this.hue = angle;
  this.hueColor = $._getHueColor(this.hue);
  this._recalculateColorFromCursor$0();
  this._rebuildGradient$0();
  this.context.putImageData$3(this.buffer, 0, 0);
  this._drawCursor$0();
  this._notifyColorChanged$0();
},
 _drawCursor$0: function() {
  var t1, t2, t3, cursorColor;
  t1 = this._color;
  t2 = t1.get$r();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t2 = 0.3 * t2;
  t3 = t1.get$g();
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t2 += 0.59 * t3;
  t1 = t1.get$b();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  cursorColor = (t2 + 0.11 * t1) / 255 < 0.5 ? "white" : "black";
  this.context.set$strokeStyle(cursorColor);
  this.context.beginPath$0();
  this.context.arc$6(this._cursorX, this._cursorY, this.cursorRadius, 0, 6.283185307179586, false);
  this.context.closePath$0();
  this.context.stroke$0();
},
 onMouseDown$2: function(x, y) {
  this._setCursorPosition$2(x, y);
},
 get$onMouseDown: function() {
  return new $.BoundClosure2(this, 'onMouseDown$2');
},
 onMouseMoved$2: function(x, y) {
  this._setCursorPosition$2(x, y);
},
 get$onMouseMoved: function() {
  return new $.BoundClosure2(this, 'onMouseMoved$2');
},
 _setCursorPosition$2: function(x, y) {
  this._cursorX = x;
  this._cursorY = y;
  this._recalculateColorFromCursor$0();
  this._calculateHSV$0();
  this._notifyColorChanged$0();
  this.context.putImageData$3(this.buffer, 0, 0);
  this._drawCursor$0();
},
 _recalculateColorFromCursor$0: function() {
  var nvalue, valueColor, t1, intensity, startColor;
  this.saturation = $.div(this._cursorX, this.canvas.get$width());
  this.value = $.mul($.div($.sub(this.canvas.get$height(), this._cursorY), this.canvas.get$height()), 255);
  nvalue = $.div(this.value, 255);
  valueColor = $.mul(this.hueColor, nvalue);
  t1 = $.mul(nvalue, 255);
  t1 = $.getInterceptor$JSNumber(t1).round$0(t1);
  intensity = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  startColor = $.ColorValue$fromRGB(intensity, intensity, intensity);
  this._color = startColor.operator$add$1($.mul($.sub(valueColor, startColor), this.saturation));
},
 _notifyColorChanged$0: function() {
  if (!(this.colorChangeListener == null))
    this.colorChangeListener$4(this._color, this.hue, this.saturation, this.value);
},
 HsvGradientPicker$3: function(width, height, _color) {
  var t1;
  this.canvas = $.CanvasElement_CanvasElement(height, width);
  t1 = this.canvas.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "color-picker-hsv-gradient");
  this.context = this.canvas.get$context2d();
  if (this._color == null)
    this._color = $.ColorValue$();
  this.mouseListener = $._MouseListener$(this.canvas, true);
  t1 = this.get$onMouseDown();
  this.mouseListener.set$onMouseDown(t1);
  t1 = this.get$onMouseMoved();
  this.mouseListener.set$onMouseMoved(t1);
  this._rebuildColor$0();
  this._draw$0();
  this._notifyColorChanged$0();
}
};

$$.HueSlider = {"":"Object;hueChangelistener<,canvas>,_hueAngle,mouseListener,gradient",
 set$hueAngle: function(value) {
  this._hueAngle = value;
  this._draw$0();
},
 _draw$0: function() {
  var context, hueColor, t1, t2, t3, cursorColor, y;
  context = this.canvas.get$context2d();
  context.set$fillStyle(this.gradient);
  context.fillRect$4(0, 0, this.canvas.get$width(), this.canvas.get$height());
  hueColor = $._getHueColor(this._hueAngle);
  t1 = hueColor.get$r();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t1 = 0.3 * t1;
  t2 = hueColor.get$g();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t1 += 0.59 * t2;
  t3 = hueColor.get$b();
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  cursorColor = (t1 + 0.11 * t3) / 255 < 0.5 ? "white" : "black";
  y = $.add($.div($.mul(this.canvas.get$height(), this._hueAngle), 6.283185307179586), 0.5);
  context.save$0();
  context.set$strokeStyle(cursorColor);
  context.set$lineWidth(1);
  context.beginPath$0();
  context.moveTo$2(0, y);
  context.lineTo$2(this.canvas.get$width(), y);
  context.closePath$0();
  context.stroke$0();
  context.set$fillStyle(cursorColor);
  context.beginPath$0();
  context.moveTo$2(0, $.sub(y, 4));
  context.lineTo$2(4, y);
  context.lineTo$2(0, $.add(y, 4));
  context.closePath$0();
  context.fill$0();
  context.beginPath$0();
  context.moveTo$2(this.canvas.get$width(), $.sub(y, 4));
  context.lineTo$2($.sub(this.canvas.get$width(), 4), y);
  context.lineTo$2(this.canvas.get$width(), $.add(y, 4));
  context.closePath$0();
  context.fill$0();
  context.restore$0();
},
 _buildGradient$0: function() {
  var hueColors, gradientStopDelta, i, gradientStop, t1, t2;
  hueColors = [$.ColorValue$fromRGB(255, 0, 0), $.ColorValue$fromRGB(255, 255, 0), $.ColorValue$fromRGB(0, 255, 0), $.ColorValue$fromRGB(0, 255, 255), $.ColorValue$fromRGB(0, 0, 255), $.ColorValue$fromRGB(255, 0, 255), $.ColorValue$fromRGB(255, 0, 0)];
  this.gradient = this.canvas.get$context2d().createLinearGradient$4(0, 0, 0, this.canvas.get$height());
  gradientStopDelta = 1 / (hueColors.length - 1);
  for (i = 0, gradientStop = 0; t1 = i < hueColors.length - 1, t2 = this.gradient, t1; ++i) {
    t1 = hueColors[i];
    t2.addColorStop$2(gradientStop, $.getInterceptor(t1).toString$0(t1));
    gradientStop += gradientStopDelta;
  }
  t1 = $.CONSTANT1.get$last(hueColors);
  t2.addColorStop$2(1, $.getInterceptor(t1).toString$0(t1));
},
 onMouseDown$2: function(x, y) {
  this._updateHue$2(x, y);
},
 get$onMouseDown: function() {
  return new $.BoundClosure2(this, 'onMouseDown$2');
},
 onMouseMoved$2: function(x, y) {
  this._updateHue$2(x, y);
},
 get$onMouseMoved: function() {
  return new $.BoundClosure2(this, 'onMouseMoved$2');
},
 _updateHue$2: function(x, y) {
  var ratio, t1;
  ratio = $.div($.mod(y, this.canvas.get$height()), this.canvas.get$height());
  if (typeof ratio !== 'number')
    throw $.iae(ratio);
  this._hueAngle = 6.283185307179586 * ratio;
  t1 = this.hueChangelistener;
  if (!(t1 == null))
    t1.onHueChanged$1(this._hueAngle);
  this._draw$0();
},
 HueSlider$2: function(width, height) {
  var t1;
  this.canvas = $.CanvasElement_CanvasElement(height, width);
  t1 = this.canvas.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "color-picker-hue-slider");
  this.mouseListener = $._MouseListener$(this.canvas, true);
  t1 = this.get$onMouseDown();
  this.mouseListener.set$onMouseDown(t1);
  t1 = this.get$onMouseMoved();
  this.mouseListener.set$onMouseMoved(t1);
  this._buildGradient$0();
  this._draw$0();
}
};

$$.EntryControl = {"":"Object;name>,getValue,setValue,elementBase>,elementName,elementValue>",
 getValue$0: function() {
  return this.getValue.call$0();
},
 getValue$0: function() {
  return this.getValue.call$0();
},
 setValue$1: function(arg0) {
  return this.setValue.call$1(arg0);
},
 refresh$0: function() {
  var t1 = this.getValue$0();
  this.elementValue.set$value(t1);
},
 EntryControl$3: function(name$, getValue, setValue) {
  var t1;
  this.elementBase = $.DivElement_DivElement();
  this.elementName = $.DivElement_DivElement();
  this.elementValue = $.InputElement_InputElement(null);
  t1 = this.elementBase.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "entry-control-base");
  t1 = this.elementName.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "entry-control-base-name");
  t1 = this.elementValue.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "entry-control-base-value");
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementName);
  t1 = this.elementBase.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, this.elementValue);
  t1 = this.name;
  this.elementName.set$innerHtml(t1);
  t1 = this.getValue$0();
  this.elementValue.set$value(t1);
  t1 = this.elementValue.get$on().get$change();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.anon13(this));
}
};

$$.ColorValue = {"":"Object;r=,g=,b=",
 _parseHex$1: function(hex) {
  var t1, a, b, c, hexR, hexG, hexB;
  t1 = $.getInterceptor$JSStringJSArray(hex);
  if (!$.eqB(t1.get$length(hex), 3) || !$.eqB(t1.get$length(hex), 6))
    throw $.$$throw($.Exception_Exception("Invalid color hex format"));
  if ($.eqB(t1.get$length(hex), 3)) {
    a = t1.substring$2(hex, 0, 0);
    b = t1.substring$2(hex, 1, 1);
    c = t1.substring$2(hex, 2, 2);
    hex = $.S(a) + $.S(a) + $.S(b) + $.S(b) + $.S(c) + $.S(c);
  }
  t1 = $.getInterceptor$JSString(hex);
  hexR = t1.substring$2(hex, 0, 1);
  hexG = t1.substring$2(hex, 2, 3);
  hexB = t1.substring$2(hex, 4, 5);
  this.r = $.int_parse("0x" + $.S(hexR));
  this.g = $.int_parse("0x" + $.S(hexG));
  this.b = $.int_parse("0x" + $.S(hexB));
},
 operator$mul$1: function(value) {
  var t1, t2, t3;
  t1 = $.mul(this.r, value);
  t1 = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  t2 = $.mul(this.g, value);
  t2 = $.getInterceptor$JSNumber(t2).toInt$0(t2);
  t3 = $.mul(this.b, value);
  return $.ColorValue$fromRGB(t1, t2, $.getInterceptor$JSNumber(t3).toInt$0(t3));
},
 operator$add$1: function(other) {
  var t1, t3, t6, t9;
  t1 = this.r;
  if (typeof t1 !== 'number')
    return this.operator$add$1$bailout(1, other, t1);
  t3 = other.get$r();
  if (typeof t3 !== 'number')
    return this.operator$add$1$bailout(2, other, t1, t3);
  t3 = t1 + t3;
  t1 = this.g;
  if (typeof t1 !== 'number')
    return this.operator$add$1$bailout(3, other, t1, t3);
  t6 = other.get$g();
  if (typeof t6 !== 'number')
    return this.operator$add$1$bailout(4, other, t6, t1, t3);
  t6 = t1 + t6;
  t1 = this.b;
  if (typeof t1 !== 'number')
    return this.operator$add$1$bailout(5, other, t6, t1, t3);
  t9 = other.get$b();
  if (typeof t9 !== 'number')
    return this.operator$add$1$bailout(6, t6, t1, t9, t3);
  return $.ColorValue$fromRGB(t3, t6, t1 + t9);
},
 operator$add$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      other = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      other = env0;
      break;
    case 3:
      t3 = env2;
      t1 = env1;
      other = env0;
      break;
    case 4:
      t3 = env3;
      t1 = env2;
      t6 = env1;
      other = env0;
      break;
    case 5:
      t3 = env3;
      t1 = env2;
      t6 = env1;
      other = env0;
      break;
    case 6:
      t3 = env3;
      t9 = env2;
      t1 = env1;
      t6 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.r;
    case 1:
      state0 = 0;
      t3 = other.get$r();
    case 2:
      state0 = 0;
      t3 = $.add(t1, t3);
      t1 = this.g;
    case 3:
      state0 = 0;
      t6 = other.get$g();
    case 4:
      state0 = 0;
      t6 = $.add(t1, t6);
      t1 = this.b;
    case 5:
      state0 = 0;
      t9 = other.get$b();
    case 6:
      var t1, other, t3, t6, t9;
      state0 = 0;
      return $.ColorValue$fromRGB(t3, t6, $.add(t1, t9));
  }
},
 operator$sub$1: function(other) {
  return $.ColorValue$fromRGB($.sub(this.r, other.get$r()), $.sub(this.g, other.get$g()), $.sub(this.b, other.get$b()));
},
 toString$0: function() {
  return "rgba(" + $.S(this.r) + ", " + $.S(this.g) + ", " + $.S(this.b) + ", 1.0)";
},
 toRgbString$0: function() {
  return $.S(this.r) + ", " + $.S(this.g) + ", " + $.S(this.b);
},
 ColorValue$copy$1: function(other) {
  this.r = other.get$r();
  this.g = other.get$g();
  this.b = other.get$b();
},
 ColorValue$from$1: function(value) {
  var t1, tokens;
  t1 = $.getInterceptor$JSString(value);
  if (t1.startsWith$1(value, "#") === true)
    this._parseHex$1(t1.substring$1(value, 1));
  else if (t1.contains$1(value, ",") === true) {
    tokens = t1.split$1(value, ",");
    if ($.ltB($.getInterceptor$JSStringJSArray(tokens).get$length(tokens), 3))
      throw $.$$throw($.Exception_Exception("Invalid color value format"));
    this.r = $.int_parse($.index(tokens, 0));
    this.g = $.int_parse($.index(tokens, 1));
    this.b = $.int_parse($.index(tokens, 2));
  }
}
};

$$._MouseListener = {"":"Object;element>,dragMode,_handlerMoveRef,_handlerDownRef,_handlerUpRef,onMouseMoved<,onMouseUp,onMouseDown<,startMouseEvent,startMouseX,startMouseY,_cursorX,_cursorY",
 onMouseMoved$2: function(arg0, arg1) {
  return this.onMouseMoved.call$2(arg0, arg1);
},
 onMouseUp$2: function(arg0, arg1) {
  return this.onMouseUp.call$2(arg0, arg1);
},
 onMouseDown$2: function(arg0, arg1) {
  return this.onMouseDown.call$2(arg0, arg1);
},
 dispose$0: function() {
  this.element.get$on().get$mouseDown().remove$1(this._handlerDownRef);
  if (this.dragMode !== true) {
    this.element.get$on().get$mouseUp().remove$1(this._handlerUpRef);
    this.element.get$on().get$mouseMove().remove$1(this._handlerMoveRef);
  } else {
    $.document().get$body().get$on().get$mouseMove().remove$1(this._handlerMoveRef);
    $.document().get$body().get$on().get$mouseUp().remove$1(this._handlerUpRef);
  }
},
 _handlerDown$1: function(e) {
  var t1;
  this.startMouseEvent = e;
  this.startMouseX = e.get$offsetX();
  this.startMouseY = e.get$offsetY();
  this._cursorX = this.startMouseX;
  this._cursorY = this.startMouseY;
  this._cursorX = $.max(0, $.min(this.element.get$width(), this._cursorX));
  this._cursorY = $.max(0, $.min(this.element.get$height(), this._cursorY));
  if (this.dragMode === true) {
    t1 = $.document().get$body().get$on().get$mouseMove();
    $.getInterceptor$JSArray(t1).add$1(t1, this._handlerMoveRef);
    t1 = $.document().get$body().get$on().get$mouseUp();
    $.getInterceptor$JSArray(t1).add$1(t1, this._handlerUpRef);
  }
  t1 = $.document().get$body().get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "color-picker-unselectable");
  if (!(this.onMouseDown == null))
    this.onMouseDown$2(this._cursorX, this._cursorY);
},
 get$_handlerDown: function() {
  return new $.BoundClosure0(this, '_handlerDown$1');
},
 _handlerMove$1: function(event$) {
  this._cursorX = $.sub($.add(this.startMouseX, event$.get$pageX()), this.startMouseEvent.get$pageX());
  this._cursorY = $.sub($.add(this.startMouseY, event$.get$pageY()), this.startMouseEvent.get$pageY());
  this._cursorX = $.max(0, $.min(this.element.get$width(), this._cursorX));
  this._cursorY = $.max(0, $.min(this.element.get$height(), this._cursorY));
  if (!(this.onMouseMoved == null))
    this.onMouseMoved$2(this._cursorX, this._cursorY);
},
 get$_handlerMove: function() {
  return new $.BoundClosure0(this, '_handlerMove$1');
},
 _handlerUp$1: function(e) {
  this._cursorX = e.get$offsetX();
  this._cursorY = e.get$offsetY();
  if (this.dragMode === true) {
    $.document().get$body().get$on().get$mouseMove().remove$1(this._handlerMoveRef);
    $.document().get$body().get$on().get$mouseUp().remove$1(this._handlerUpRef);
  }
  if (!(this.onMouseUp == null))
    this.onMouseUp$2(this._cursorX, this._cursorY);
  $.document().get$body().get$classes().remove$1("color-picker-unselectable");
},
 get$_handlerUp: function() {
  return new $.BoundClosure0(this, '_handlerUp$1');
},
 _MouseListener$2: function(element, dragMode) {
  var t1;
  this._handlerMoveRef = this.get$_handlerMove();
  this._handlerDownRef = this.get$_handlerDown();
  this._handlerUpRef = this.get$_handlerUp();
  t1 = this.element.get$on().get$mouseDown();
  $.getInterceptor$JSArray(t1).add$1(t1, this._handlerDownRef);
  if (this.dragMode !== true) {
    t1 = this.element.get$on().get$mouseUp();
    $.getInterceptor$JSArray(t1).add$1(t1, this._handlerUpRef);
    t1 = this.element.get$on().get$mouseMove();
    $.getInterceptor$JSArray(t1).add$1(t1, this._handlerMoveRef);
  }
}
};

$$.Maps__emitMap_anon = {"":"Closure;box_0,visiting_1,result_2",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_0 !== true) {
    t2 = this.result_2;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_0 = false;
  t1 = this.result_2;
  t2 = this.visiting_1;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"":"Closure;f_0",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {"":"Closure;box_0",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_0 = $.add(t1.counter_0, 1);
}
};

$$.NoSuchMethodError_toString_anon = {"":"Closure;box_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_1, 0)) {
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_1 = $.add(t1.i_1, 1);
}
};

$$.createSunflowerBinding_anon = {"":"Closure;",
 call$0: function() {
  var t1 = $.seeds;
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon0 = {"":"Closure;",
 call$1: function(value) {
  var t1 = $.double_parse(value);
  $.seeds = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon1 = {"":"Closure;",
 call$0: function() {
  var t1 = $.phiIndex;
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon2 = {"":"Closure;",
 call$1: function(value) {
  $.phiIndex = $.double_parse(value);
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon3 = {"":"Closure;",
 call$0: function() {
  var t1 = $.scaleFactor;
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon4 = {"":"Closure;",
 call$1: function(value) {
  $.scaleFactor = $.double_parse(value);
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon5 = {"":"Closure;",
 call$0: function() {
  return $.title;
}
};

$$.createSunflowerBinding_anon6 = {"":"Closure;",
 call$1: function(value) {
  $.title = value;
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon7 = {"":"Closure;",
 call$0: function() {
  var t1 = $.seedRadius;
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon8 = {"":"Closure;",
 call$1: function(value) {
  $.seedRadius = $.double_parse(value);
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon9 = {"":"Closure;",
 call$0: function() {
  var t1 = $.get$seedColor();
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon10 = {"":"Closure;",
 call$1: function(value) {
  $.seedColor = $.SunColor$parse(value);
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon11 = {"":"Closure;",
 call$0: function() {
  var t1 = $.seedStrokeWidth;
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon12 = {"":"Closure;",
 call$1: function(value) {
  $.seedStrokeWidth = $.double_parse(value);
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon13 = {"":"Closure;",
 call$0: function() {
  var t1 = $.get$strokeColor();
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon14 = {"":"Closure;",
 call$1: function(value) {
  $.strokeColor = $.SunColor$parse(value);
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon15 = {"":"Closure;",
 call$0: function() {
  return $.seedType;
}
};

$$.createSunflowerBinding_anon16 = {"":"Closure;",
 call$1: function(value) {
  $.seedType = value;
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon17 = {"":"Closure;",
 call$0: function() {
  var t1 = $.centerX;
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon18 = {"":"Closure;",
 call$1: function(value) {
  var t1 = $.double_parse(value);
  $.centerX = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  $.drawFrame($.context);
}
};

$$.createSunflowerBinding_anon19 = {"":"Closure;",
 call$0: function() {
  var t1 = $.centerY;
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.createSunflowerBinding_anon20 = {"":"Closure;",
 call$1: function(value) {
  var t1 = $.double_parse(value);
  $.centerY = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  $.drawFrame($.context);
}
};

$$.CssClassSet_clear_anon = {"":"Closure;",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).clear$0(s);
}
};

$$._HashSetImpl_forEach_anon = {"":"Closure;f_0",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$.CssClassSet_add_anon = {"":"Closure;value_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).add$1(s, this.value_0);
}
};

$$.invokeClosure_anon = {"":"Closure;closure_0",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":"Closure;arg1_1,closure_2",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":"Closure;closure_3,arg1_4,arg2_5",
 call$0: function() {
  return this.closure_3.call$2(this.arg1_4, this.arg2_5);
}
};

$$.PropertyGrid__bindModel_anon = {"":"Closure;",
 call$1: function(controller) {
  return controller.dispose$0();
}
};

$$.CssClassSet_addAll_anon = {"":"Closure;collection_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).addAll$1(s, this.collection_0);
}
};

$$._HashSetImpl_addAll_anon = {"":"Closure;this_0",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$.FilteredElementList__filtered_anon = {"":"Closure;",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._HashSetImpl_filter_anon = {"":"Closure;result_0,f_1",
 call$2: function(key, value) {
  var t1;
  if (this.f_1.call$1(key) === true) {
    t1 = this.result_0;
    $.getInterceptor$JSArray(t1).add$1(t1, key);
  }
}
};

$$._ChildrenElementList_filter_anon = {"":"Closure;f_0,output_1",
 call$1: function(element) {
  var t1;
  if (this.f_0.call$1(element) === true) {
    t1 = this.output_1;
    $.getInterceptor$JSArray(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList_removeRange_anon = {"":"Closure;",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.anon = {"":"Closure;this_0",
 call$1: function(e) {
  var t1 = this.this_0;
  return t1.get$grid().onItemSelected$1(t1);
}
};

$$.anon0 = {"":"Closure;this_1",
 call$1: function(e) {
  var t1 = this.this_1;
  return t1.get$grid().onItemSelected$1(t1);
}
};

$$.PropertyEditorTextbox_showEditor_anon = {"":"Closure;this_0",
 call$1: function(e) {
  var t1 = this.this_0;
  if (t1.get$editing() === true)
    t1.get$controller().finishEditing$1(t1.get$textbox().get$value());
  return;
}
};

$$.PropertyEditorTextbox_showEditor_anon0 = {"":"Closure;this_1",
 call$1: function(e) {
  var t1;
  if ($.eqB(e.get$keyCode(), 13)) {
    t1 = this.this_1;
    if (t1.get$editing() === true)
      t1.get$controller().finishEditing$1(t1.get$textbox().get$value());
  }
}
};

$$.PropertyEditorSlider_showEditor_anon = {"":"Closure;this_0",
 call$1: function(e) {
  var t1, t2, t3;
  t1 = this.this_0;
  if (t1.get$editing() === true) {
    t2 = t1.get$controller();
    t3 = $.div($.int_parse(t1.get$slider().get$value()), t1.get$factor());
    t2.finishEditing$1($.getInterceptor(t3).toString$0(t3));
  }
  return;
}
};

$$.PropertyEditorSlider_showEditor_anon0 = {"":"Closure;this_1",
 call$1: function(e) {
  var t1, t2, t3;
  if ($.eqB(e.get$keyCode(), 13)) {
    t1 = this.this_1;
    if (t1.get$editing() === true) {
      t2 = t1.get$controller();
      t3 = $.div($.int_parse(t1.get$slider().get$value()), t1.get$factor());
      t2.finishEditing$1($.getInterceptor(t3).toString$0(t3));
    }
  }
}
};

$$.PropertyEditorSlider_showEditor_anon1 = {"":"Closure;this_2",
 call$1: function(e) {
  var t1, t2, t3;
  t1 = this.this_2;
  t2 = t1.get$controller();
  t3 = $.div($.int_parse(t1.get$slider().get$value()), t1.get$factor());
  return t2.requestValueChange$1($.getInterceptor(t3).toString$0(t3));
}
};

$$._getElementPageTop_anon = {"":"Closure;",
 call$1: function(e) {
  return e.get$offsetTop();
}
};

$$._getElementPageLeft_anon = {"":"Closure;",
 call$1: function(e) {
  return e.get$offsetLeft();
}
};

$$.PropertyEditorSpinner_showEditor_anon = {"":"Closure;this_0",
 call$1: function(e) {
  var t1 = this.this_0;
  if (t1.get$editing() === true)
    t1.get$controller().finishEditing$1(t1.get$spinner().get$value());
  return;
}
};

$$.PropertyEditorSpinner_showEditor_anon0 = {"":"Closure;this_1",
 call$1: function(e) {
  var t1;
  if ($.eqB(e.get$keyCode(), 13)) {
    t1 = this.this_1;
    if (t1.get$editing() === true)
      t1.get$controller().finishEditing$1(t1.get$spinner().get$value());
  }
}
};

$$.PropertyEditorColor_showEditor_anon = {"":"Closure;this_0",
 call$1: function(e) {
  return this.this_0._notifyFinishEditing$0();
}
};

$$.PropertyEditorColor_showEditor_anon0 = {"":"Closure;this_1",
 call$1: function(e) {
  if ($.eqB(e.get$keyCode(), 13))
    this.this_1._notifyFinishEditing$0();
}
};

$$.PropertyEditorColor_showEditor_anon1 = {"":"Closure;this_2",
 call$4: function(color, hue, saturation, brightness) {
  this.this_2.get$controller().requestValueChange$1(color.toRgbString$0());
}
};

$$.anon1 = {"":"Closure;this_0",
 call$0: function() {
  var t1 = this.this_0.get$color().get$r();
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.anon2 = {"":"Closure;this_1",
 call$1: function(value) {
  var t1, _color;
  t1 = this.this_1;
  _color = t1.get$color();
  _color.set$r($.max(0, $.min(255, $.int_parse(value))));
  t1.set$color(_color);
}
};

$$.anon3 = {"":"Closure;this_2",
 call$0: function() {
  var t1 = this.this_2.get$color().get$g();
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.anon4 = {"":"Closure;this_3",
 call$1: function(value) {
  var t1, _color;
  t1 = this.this_3;
  _color = t1.get$color();
  _color.set$g($.max(0, $.min(255, $.int_parse(value))));
  t1.set$color(_color);
}
};

$$.anon5 = {"":"Closure;this_4",
 call$0: function() {
  var t1 = this.this_4.get$color().get$b();
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.anon6 = {"":"Closure;this_5",
 call$1: function(value) {
  var t1, _color;
  t1 = this.this_5;
  _color = t1.get$color();
  _color.set$b($.max(0, $.min(255, $.int_parse(value))));
  t1.set$color(_color);
}
};

$$.anon7 = {"":"Closure;this_6",
 call$0: function() {
  var t1, degrees;
  t1 = $.div($.mul(this.this_6.get$colorPicker().get$picker().get$hue(), 180), 3.141592653589793);
  degrees = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  return $.getInterceptor(degrees).toString$0(degrees);
}
};

$$.anon8 = {"":"Closure;",
 call$1: function(value) {
}
};

$$.anon9 = {"":"Closure;this_7",
 call$0: function() {
  var t1, saturationInt;
  t1 = $.mul(this.this_7.get$colorPicker().get$picker().get$saturation(), 255);
  t1 = $.getInterceptor$JSNumber(t1).round$0(t1);
  saturationInt = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  return $.getInterceptor(saturationInt).toString$0(saturationInt);
}
};

$$.anon10 = {"":"Closure;",
 call$1: function(value) {
}
};

$$.anon11 = {"":"Closure;this_8",
 call$0: function() {
  var t1 = this.this_8.get$colorPicker().get$picker().get$value();
  t1 = $.getInterceptor$JSNumber(t1).toInt$0(t1);
  return $.getInterceptor(t1).toString$0(t1);
}
};

$$.anon12 = {"":"Closure;",
 call$1: function(value) {
}
};

$$.anon13 = {"":"Closure;this_0",
 call$1: function(e) {
  var t1 = this.this_0;
  t1.setValue$1(t1.get$elementValue().get$value());
}
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"":"Closure;values_0,copies_1",
 call$1: function(value) {
  var t1, t3, length$, i, t2;
  t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t3.add$1(t1, value);
  t1 = this.copies_1;
  $.getInterceptor$JSArray(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_0;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, value, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = $.index(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor$JSArray(t1).add$1(t1, value);
      t1 = this.copies_1;
      $.getInterceptor$JSArray(t1).add$1(t1, null);
      return length$;
  }
}
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"":"Closure;copies_2",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"":"Closure;copies_3",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"":"Closure;writeSlot_4,mustCopy_5,findSlot_6,readSlot_7",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (t1 = $.CONSTANT1.iterator$0(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_5 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(4, e, length$, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env2;
      length$ = env1;
      e = env0;
      break;
    case 4:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (t1 = $.CONSTANT1.iterator$0(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    default:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 4 || state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.getInterceptor$JSStringJSArray(e).get$length(e);
          case 3:
            state0 = 0;
            copy = this.mustCopy_5 === true ? new Array(length$) : e;
          case 4:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.anon14 = {"":"Closure;this_0,controller_1",
 call$1: function(e) {
  this.controller_1.requestValueChange$1(this.this_0.get$spinner().get$value());
}
};

$$.PropertyGrid__insertCategoryElement_anon = {"":"Closure;categoryItemBody_0,cssIconMinus_1,expandIcon_2,cssIconPlus_3",
 call$1: function(e) {
  var t1, t2, t3, t4, t5, t6;
  t1 = this.categoryItemBody_0;
  t2 = t1.get$classes();
  t3 = $.getInterceptor$JSStringJSArray(t2).contains$1(t2, "property-grid-category-body-hide") === true;
  t4 = this.expandIcon_2;
  t5 = this.cssIconPlus_3;
  t6 = this.cssIconMinus_1;
  if (t3) {
    t1.get$classes().remove$1("property-grid-category-body-hide");
    t4.get$classes().remove$1(t5);
    t2 = t4.get$classes();
    $.getInterceptor$JSArray(t2).add$1(t2, t6);
  } else {
    t1 = t1.get$classes();
    $.getInterceptor$JSArray(t1).add$1(t1, "property-grid-category-body-hide");
    t1 = t4.get$classes();
    $.getInterceptor$JSArray(t1).add$1(t1, t5);
    t4.get$classes().remove$1(t6);
  }
}
};

$$.Storage_keys_anon = {"":"Closure;keys_0",
 call$2: function(k, v) {
  var t1 = this.keys_0;
  return $.getInterceptor$JSArray(t1).add$1(t1, k);
}
};

$$._LinkedHashMapImpl_keys_anon = {"":"Closure;box_0,list_1",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_1;
  t2 = this.box_0;
  t3 = t2.index_0;
  t2.index_0 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._HashMapImpl_keys_anon = {"":"Closure;box_0,list_1",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_1;
  t2 = this.box_0;
  t3 = t2.i_0;
  t2.i_0 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
}
};

$$.BoundClosure = {"":"Closure;self,target", call$0: function() {
  return this.self[this.target]();
}
};
$$.BoundClosure0 = {"":"Closure;self,target", call$1: function(p0) {
  return this.self[this.target](p0);
}
};
$$.BoundClosure1 = {"":"Closure;self,target", call$4: function(p0, p1, p2, p3) {
  return this.self[this.target](p0, p1, p2, p3);
}
};
$$.BoundClosure2 = {"":"Closure;self,target", call$2: function(p0, p1) {
  return this.self[this.target](p0, p1);
}
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CONSTANT2.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.HueSlider$ = function(width, height) {
  var t1 = new $.HueSlider(null, null, 0, null, null);
  t1.HueSlider$2(width, height);
  return t1;
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.CONSTANT2.truncate$0(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CONSTANT0;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.ColorPickerInfoBox$ = function(colorPicker) {
  var t1 = new $.ColorPickerInfoBox(colorPicker, null, null, null, null, null, null, null, null, null, null);
  t1.ColorPickerInfoBox$1(colorPicker);
  return t1;
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CONSTANT.endsWith$1(message, "is null") === true || $.CONSTANT.endsWith$1(message, "is undefined") === true || $.CONSTANT.endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CONSTANT1.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(arg1, closure).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(closure, arg1, arg2).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  if (!(target == null))
    target.builtin$typeInfo = typeInfo;
};

$.getRuntimeTypeInfo = function(target) {
  var res;
  if (target == null)
    return;
  res = target.builtin$typeInfo;
  return res == null ? {} : res;
};

$._MouseListener$ = function(element, dragMode) {
  var t1 = new $._MouseListener(element, dragMode, null, null, null, null, null, null, null, null, null, 0, 0);
  t1._MouseListener$2(element, dragMode);
  return t1;
};

$.DivElement_DivElement = function() {
  return $.document().$$dom_createElement$1("div");
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.isSubtype = function(s, t) {
  var t1, len, i;
  if (typeof s !== 'string')
    return $.isSubtype$bailout(1, s, t);
  if (typeof t !== 'string' && (typeof t !== 'object' || t === null || t.constructor !== Array && !t.is$JavaScriptIndexingBehavior()))
    return $.isSubtype$bailout(1, s, t);
  if (false)
    return true;
  if (!s.constructor === Array)
    return s === t;
  if (0 >= s.length)
    throw $.ioore(0);
  t1 = s[0];
  if (0 >= t.length)
    throw $.ioore(0);
  if (!$.eqB(t1, t[0]))
    return false;
  len = s.length;
  for (i = 1; i < len; ++i) {
    if (i >= s.length)
      throw $.ioore(i);
    t1 = s[i];
    if (i >= t.length)
      throw $.ioore(i);
    if ($.isSubtype(t1, t[i]) !== true)
      return false;
  }
  return true;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT6));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null, '$.Match');
  $.setRuntimeTypeInfo(result, ['$.Match']);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.CONSTANT.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT.substring$1(receiver, startIndex));
  else {
    substr = $.CONSTANT.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).iterator$0(t1).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.EntryControl$ = function(name$, getValue, setValue) {
  var t1 = new $.EntryControl(name$, getValue, setValue, null, null, null);
  t1.EntryControl$3(name$, getValue, setValue);
  return t1;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT6)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.PropertyGrid$ = function(elementClient) {
  var t1 = $.List_List(null, $.PropertyItemController);
  $.setRuntimeTypeInfo(t1, [$.PropertyItemController]);
  t1 = new $.PropertyGrid(elementClient, null, null, null, null, null, null, t1, null);
  t1.PropertyGrid$1(elementClient);
  return t1;
};

$.main = function() {
  $.PropertyGrid$($.query("#my_property_grid")).set$model($.get$sunflowerProperties());
  var canvas = $.query("#canvas");
  $.centerY = 200;
  $.centerX = 200;
  $.context = canvas.get$context2d();
  $.drawFrame($.context);
};

$.drawFrame = function(context) {
  var i, t1, t2, theta, r;
  context.clearRect$4(0, 0, 400, 400);
  context.save$0();
  context.set$fillStyle("black");
  context.set$font("40px Calibri");
  context.fillText$3($.title, 80, 50);
  context.restore$0();
  $.PHI = ($.sqrt($.phiIndex) + 1) / 2;
  for (i = 0; $.ltB(i, $.seeds); ++i) {
    t1 = i * 6.283185307179586;
    t2 = $.PHI;
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    theta = t1 / t2;
    t2 = $.sqrt(i);
    t1 = $.scaleFactor;
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    r = t2 * t1;
    $.drawSeed(context, $.add($.centerX, r * $.cos(theta)), $.sub($.centerY, r * $.sin(theta)));
  }
};

$.createSunflowerBinding = function() {
  var model = $.PropertyGridModel$();
  model.register$8$category$description$editorConfig("Seeds", new $.createSunflowerBinding_anon(), new $.createSunflowerBinding_anon0(), "label", "slider", "Algorithm", "The number of seeds in the sunflower", [0, 1000]);
  model.register$8$category$description$editorConfig("PHI Index", new $.createSunflowerBinding_anon1(), new $.createSunflowerBinding_anon2(), "label", "slider", "Algorithm", "The PHI Index", [5000, 5200, 1000]);
  model.register$8$category$description$editorConfig("Scale Factor", new $.createSunflowerBinding_anon3(), new $.createSunflowerBinding_anon4(), "label", "slider", "Algorithm", "The Scale Factor", [300, 800, 100]);
  model.register$7$category$description("Title", new $.createSunflowerBinding_anon5(), new $.createSunflowerBinding_anon6(), "label", "textbox", "Appearence", "Caption shown on the top");
  model.register$8$category$description$editorConfig("Seed Radius", new $.createSunflowerBinding_anon7(), new $.createSunflowerBinding_anon8(), "label", "slider", "Appearence", "The seed radius", [100, 600, 100]);
  model.register$8$category$description$editorConfig("Seed Color", new $.createSunflowerBinding_anon9(), new $.createSunflowerBinding_anon10(), "color", "color", "Appearence", "The seed color", 128);
  model.register$8$category$description$editorConfig("Stroke Size", new $.createSunflowerBinding_anon11(), new $.createSunflowerBinding_anon12(), "label", "slider", "Appearence", "The seed's stroke width", [100, 6000, 1000]);
  model.register$8$category$description$editorConfig("Stroke Color", new $.createSunflowerBinding_anon13(), new $.createSunflowerBinding_anon14(), "color", "color", "Appearence", "The seed's stroke color", 128);
  model.register$8$category$description$editorConfig("Seed Type", new $.createSunflowerBinding_anon15(), new $.createSunflowerBinding_anon16(), "label", "spinner", "Appearence", "The seed's shape type", $._getShapeTypes);
  model.register$8$category$description$editorConfig("Center X", new $.createSunflowerBinding_anon17(), new $.createSunflowerBinding_anon18(), "label", "slider", "Misc", "Sunflower's center (x-axis)", [0, 400]);
  model.register$8$category$description$editorConfig("Center Y", new $.createSunflowerBinding_anon19(), new $.createSunflowerBinding_anon20(), "label", "slider", "Misc", "Sunflower's center (y-axis)", [0, 400]);
  return model;
};

$._getShapeTypes = function() {
  return ["Seeds", "Circle", "Drops"];
};

$.drawSeed = function(context, x, y) {
  var tanticleLength, dx, dy, length$, t1, x2, t2, y2;
  context.beginPath$0();
  context.set$lineWidth($.seedStrokeWidth);
  context.set$fillStyle($.get$seedColor().toRgba$0());
  context.set$strokeStyle($.get$strokeColor().toRgba$0());
  if ($.eqB($.seedType, "Circle"))
    context.arc$6(x, y, $.seedRadius, 0, 6.283185307179586, false);
  else if ($.eqB($.seedType, "Drops"))
    context.arc$6(x, y, $.seedRadius, 0, 3.141592653589793, false);
  else if ($.eqB($.seedType, "Seeds")) {
    tanticleLength = $.mul($.seedRadius, 3);
    dx = $.sub(x, $.centerX);
    dy = $.sub(y, $.centerY);
    length$ = $.sqrt($.add($.mul(dx, dx), $.mul(dy, dy)));
    if (length$ <= 0.000001)
      length$ = 1;
    t1 = $.mul($.div(dx, length$), tanticleLength);
    x2 = $.add(x, $.getInterceptor$JSNumber(t1).toInt$0(t1));
    t2 = $.mul($.div(dy, length$), tanticleLength);
    y2 = $.add(y, $.getInterceptor$JSNumber(t2).toInt$0(t2));
    context.moveTo$2(x, y);
    context.lineTo$2(x2, y2);
  }
  context.fill$0();
  context.closePath$0();
  context.stroke$0();
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$._TypedImageData$ = function(data, height, width) {
  return new $._TypedImageData(data, height, width);
};

$.PropertyGridModel$ = function() {
  var t1, t2;
  t1 = $.List_List(null, $.PropertyItem);
  $.setRuntimeTypeInfo(t1, [$.PropertyItem]);
  t2 = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(t2, ['$.String']);
  return new $.PropertyGridModel(t1, t2);
};

$.PropertyItemController$ = function(grid, model, elementCellName, elementCellValue) {
  var t1 = new $.PropertyItemController(grid, model, null, null, elementCellName, elementCellValue, null, "property-grid-item-name-selected");
  t1.PropertyItemController$4(grid, model, elementCellName, elementCellValue);
  return t1;
};

$._HashSetImpl$ = function(E) {
  var t1 = new $._HashSetImpl(null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1._HashSetImpl$0();
  return t1;
};

$.PropertyItem$ = function(name$, getValue, setValue, viewType, editorType, category, description, editorConfig) {
  var t1 = new $.PropertyItem(name$, getValue, setValue, editorType, editorConfig, viewType, description, category);
  t1.PropertyItem$8$category$description$editorConfig(name$, getValue, setValue, viewType, editorType, category, description, editorConfig);
  return t1;
};

$._HashMapImpl$ = function(K, V) {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.HashMap_HashMap = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$._HashSetIterator$ = function(set_) {
  var t1 = new $._HashSetIterator(set_._backingMap.get$_keys(), -1);
  t1._HashSetIterator$1(set_);
  return t1;
};

$.SunColor$ = function(r, g, b) {
  return new $.SunColor(r, g, b);
};

$.SunColor$parse = function(data) {
  var t1 = new $.SunColor(null, null, null);
  t1.SunColor$parse$1(data);
  return t1;
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CONSTANT.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_parseInt = function(string) {
  var match, base, result;
  $.checkString(string);
  match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  base = !($.index(match, 1) == null) ? 16 : 10;
  result = parseInt(string, base);
  if ($.CONSTANT2.get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_parseDouble = function(string) {
  var result;
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  result = parseFloat(string);
  if ($.CONSTANT2.get$isNaN(result) === true && !$.eqB(string, "NaN"))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.Maps_mapToString = function(m) {
  var result, t1;
  result = $.StringBuffer_StringBuffer("");
  t1 = $.List_List(null);
  $.setRuntimeTypeInfo(t1, []);
  $.Maps__emitMap(m, result, t1);
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, visiting, result));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.TableElement_TableElement = function() {
  return $.document().$$dom_createElement$1("table");
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.InputElement_InputElement = function(type) {
  var e = $.document().$$dom_createElement$1("input");
  if (!(type == null))
    e.set$type(type);
  return e;
};

$._FrozenCssClassSet$ = function() {
  return new $._FrozenCssClassSet();
};

$.PropertyItemViewFactory_create = function(controller, type, elementCell) {
  if ($.eqB(type, "label"))
    return $.PropertyViewLabel$(controller, elementCell);
  if ($.eqB(type, "color"))
    return $.PropertyViewColor$(controller, elementCell);
  else
    throw $.$$throw($.PropertyGridException$("Cannot created property item view of type " + $.S(type)));
};

$.TableRowElement_TableRowElement = function() {
  return $.document().$$dom_createElement$1("tr");
};

$.PropertyItemEditorFactory_create = function(controller, type, editorConfig) {
  if ($.eqB(type, "textbox"))
    return $.PropertyEditorTextbox$(controller);
  else if ($.eqB(type, "slider"))
    return $.PropertyEditorSlider$(controller);
  else if ($.eqB(type, "spinner"))
    return $.PropertyEditorSpinner$(controller);
  else if ($.eqB(type, "color"))
    return $.PropertyEditorColor$(controller);
  else
    throw $.$$throw($.PropertyGridException$("Cannot create property item editor of type " + $.S(type)));
};

$.TableCellElement_TableCellElement = function() {
  return $.document().$$dom_createElement$1("td");
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertDartToNative_ImageData = function(imageData) {
  if (typeof imageData === 'object' && imageData !== null && !!imageData.is$_TypedImageData)
    return {data: imageData.data, height: imageData.height, width: imageData.width};
  return imageData;
};

$._convertNativeToDart_ImageData = function(nativeImageData) {
  0;
  if (typeof nativeImageData === 'object' && nativeImageData !== null && nativeImageData.is$ImageData())
    return nativeImageData;
  return $._TypedImageData$(nativeImageData.data, nativeImageData.height, nativeImageData.width);
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies, t1, t2;
  values = [];
  copies = [];
  t1 = new $.convertNativeToDart_AcceptStructuredClone_findSlot(values, copies);
  t2 = new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies);
  return new $.convertNativeToDart_AcceptStructuredClone_walk(new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies), mustCopy, t1, t2).call$1(object);
};

$.Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if ($.eqB(element, t1.next$0()))
      return true;
  return false;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result, t1;
  result = $.StringBuffer_StringBuffer("");
  t1 = $.List_List(null);
  $.setRuntimeTypeInfo(t1, []);
  $.Collections__emitCollection(c, result, t1);
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.CONSTANT5.get$isNegative(b) === true || $.CONSTANT5.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.CONSTANT5.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.CONSTANT2.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.atan2 = function(a, b) {
  return Math.atan2($.checkNum(a), $.checkNum(b));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.SelectElement_SelectElement = function() {
  return $.document().$$dom_createElement$1("select");
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
};

$.LinkedHashMap_LinkedHashMap = function(K, V) {
  return $._LinkedHashMapImpl$(K, V);
};

$._LinkedHashMapImpl$ = function(K, V) {
  var t1 = new $._LinkedHashMapImpl(null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$._OptionElementFactoryProvider_createOptionElement = function(data, value, defaultSelected, selected) {
  if (data == null)
    return new Option();
  if (value == null)
    return new Option(data);
  if (defaultSelected == null)
    return new Option(data,value);
  if (selected == null)
    return new Option(data,value,defaultSelected);
  return new Option(data,value,defaultSelected,selected);
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$.PropertyViewLabel$ = function(controller, elementCell) {
  var t1 = new $.PropertyViewLabel(controller, elementCell, null, null);
  t1.PropertyViewLabel$2(controller, elementCell);
  return t1;
};

$._getElementPageTop = function(element) {
  return $._getRecursiveOffset(element, new $._getElementPageTop_anon());
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._getRecursiveOffset = function(element, getOffset) {
  var t1, t3;
  if (element == null)
    return 0;
  t1 = getOffset.call$1(element);
  if (typeof t1 !== 'number')
    return $._getRecursiveOffset$bailout(1, element, getOffset, t1);
  t3 = $._getRecursiveOffset(element.get$offsetParent(), getOffset);
  if (typeof t3 !== 'number')
    return $._getRecursiveOffset$bailout(2, t1, t3);
  return t1 + t3;
};

$.PropertyViewColor$ = function(controller, elementCell) {
  var t1 = new $.PropertyViewColor(null, null, controller, elementCell, null, null);
  t1.PropertyViewColor$2(controller, elementCell);
  return t1;
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.List_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.Map_Map = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = $.document().$$dom_createElement$1("canvas");
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.List_List$from = function(other, E) {
  var list, t1;
  list = $.List_List(null, E);
  $.setRuntimeTypeInfo(list, [E]);
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    list.push(t1.next$0());
  return list;
};

$.Set_Set = function(E) {
  return $._HashSetImpl$(E);
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$._getHueColor = function(angle) {
  var slots, t1, slotPosition, slotIndex, slotDelta, t2, startColor, t3;
  slots = [$.ColorValue$fromRGB(255, 0, 0), $.ColorValue$fromRGB(255, 255, 0), $.ColorValue$fromRGB(0, 255, 0), $.ColorValue$fromRGB(0, 255, 255), $.ColorValue$fromRGB(0, 0, 255), $.ColorValue$fromRGB(255, 0, 255)];
  t1 = $.div($.mul(angle, 180), 3.141592653589793);
  t1 = $.getInterceptor$JSNumber(t1).round$0(t1);
  slotPosition = $.div($.mod($.getInterceptor$JSNumber(t1).toInt$0(t1), 360), 60);
  slotIndex = $.getInterceptor$JSNumber(slotPosition).toInt$0(slotPosition);
  slotDelta = $.sub(slotPosition, slotIndex);
  if (slotIndex !== (slotIndex | 0))
    throw $.iae(slotIndex);
  t2 = slots.length;
  if (slotIndex < 0 || slotIndex >= t2)
    throw $.ioore(slotIndex);
  startColor = slots[slotIndex];
  t3 = $.mod(slotIndex + 1, t2);
  if (t3 < 0 || t3 >= t2)
    throw $.ioore(t3);
  return $.add(startColor, $.mul($.sub(slots[t3], startColor), slotDelta));
};

$._getElementPageLeft = function(element) {
  return $._getRecursiveOffset(element, new $._getElementPageLeft_anon());
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.PropertyEditorTextbox$ = function(controller) {
  var t1 = new $.PropertyEditorTextbox(null, false, controller);
  t1.PropertyEditorTextbox$1(controller);
  return t1;
};

$.PropertyEditorSlider$ = function(controller) {
  var t1 = new $.PropertyEditorSlider(null, null, false, 1, controller);
  t1.PropertyEditorSlider$1(controller);
  return t1;
};

$.PropertyEditorSpinner$ = function(controller) {
  var t1 = new $.PropertyEditorSpinner(null, false, controller);
  t1.PropertyEditorSpinner$1(controller);
  return t1;
};

$.PropertyEditorColor$ = function(controller) {
  var t1 = new $.PropertyEditorColor(null, null, false, null, controller);
  t1.PropertyEditorColor$1(controller);
  return t1;
};

$.OptionElement_OptionElement = function(data, value, defaultSelected, selected) {
  var t1, t2, t3, t4;
  t1 = $ === data;
  if (t1)
    data = null;
  t2 = $ === value;
  if (t2)
    value = null;
  t3 = $ === defaultSelected;
  if (t3)
    defaultSelected = null;
  t4 = $ === selected;
  if (t4)
    selected = null;
  if (t1)
    return $._OptionElementFactoryProvider_createOptionElement(null, null, null, null);
  if (t2)
    return $._OptionElementFactoryProvider_createOptionElement(data, null, null, null);
  if (t3)
    return $._OptionElementFactoryProvider_createOptionElement(data, value, null, null);
  if (t4)
    return $._OptionElementFactoryProvider_createOptionElement(data, value, defaultSelected, null);
  return $._OptionElementFactoryProvider_createOptionElement(data, value, defaultSelected, selected);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.PropertyGridException$ = function(message) {
  return new $.PropertyGridException(message);
};

$.ColorPicker$ = function(size, initialColor, showInfoBox) {
  var t1 = new $.ColorPicker(null, initialColor, null, null, null, null);
  t1.ColorPicker$3$initialColor$showInfoBox(size, initialColor, showInfoBox);
  return t1;
};

$.ColorValue$from = function(value) {
  var t1 = new $.ColorValue(null, null, null);
  t1.ColorValue$from$1(value);
  return t1;
};

$.ColorValue$ = function() {
  return new $.ColorValue(0, 0, 0);
};

$.ColorValue$fromRGB = function(r, g, b) {
  return new $.ColorValue(r, g, b);
};

$.ColorValue$copy = function(other) {
  var t1 = new $.ColorValue(null, null, null);
  t1.ColorValue$copy$1(other);
  return t1;
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.HsvGradientPicker$ = function(width, height, _color) {
  var t1 = new $.HsvGradientPicker(null, null, null, null, _color, null, 4, null, null, null, null, 0, 0, null);
  t1.HsvGradientPicker$3(width, height, _color);
  return t1;
};

$.isSubtype$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t = env1;
      s = env0;
      break;
    case 2:
      len = env2;
      t = env1;
      s = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = !(s == null);
      if (s == null || t == null)
        return true;
      if (!(t1 && s.constructor === Array))
        return $.eq(s, t);
      if (!$.eqB($.index(s, 0), $.index(t, 0)))
        return false;
      len = $.getInterceptor$JSStringJSArray(s).get$length(s);
    case 2:
      var t, s, t1, len, i;
      state0 = 0;
      for (i = 1; $.ltB(i, len); ++i)
        if ($.isSubtype($.index(s, i), $.index(t, i)) !== true)
          return false;
      return true;
  }
};

$.Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env1;
      strings = env0;
      break;
    case 3:
      length$ = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      length$ = $.getInterceptor$JSStringJSArray(strings).get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = $.index(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = $.index(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$._getRecursiveOffset$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env2;
      getOffset = env1;
      element = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (element == null)
        return 0;
      t1 = getOffset.call$1(element);
    case 1:
      state0 = 0;
      t3 = $._getRecursiveOffset(element.get$offsetParent(), getOffset);
    case 2:
      var t1, getOffset, element, t3;
      state0 = 0;
      return $.add(t1, t3);
  }
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$._getShapeTypes.call$0 = $._getShapeTypes;
$._getShapeTypes.$name = "_getShapeTypes";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
Isolate.$finishClasses($$);
$$ = {};
$.CONSTANT3 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT5 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT = new Isolate.$isolateProperties.JSString();
$.CONSTANT0 = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT6 = new Isolate.$isolateProperties.Object();
$.CONSTANT4 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT1 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT2 = new Isolate.$isolateProperties.JSNumber();
$.Primitives_hashCodeSeed = 0;
$._cachedBrowserPrefix = null;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT4;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._getTypeNameOf = null;
$.PI = 3.141592653589793;
$.TAU = 6.283185307179586;
$.MAX_D = 400;
$.PHI = null;
$.context = null;
$.seeds = 500;
$.scaleFactor = 4;
$.phiIndex = 5;
$.title = "Sunflower";
$.seedRadius = 3;
$.seedStrokeWidth = 1.5;
$.seedType = "Circle";
$.centerX = 200;
$.centerY = 200;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == 'number') return $.JSNumber.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  if (typeof receiver == 'number' && Math.floor(receiver) == receiver) return $.JSInt.prototype;
  if (typeof receiver == 'number') return $.JSDouble.prototype;
  if (receiver == null) return $.JSNull.prototype;
  if (typeof receiver == 'function') return $.JSFunction.prototype;
  if (typeof receiver == 'boolean') return $.JSBool.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, 'seedColor', 'seedColor', 'get$seedColor', function() {
  return $.SunColor$(32, 255, 192);
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
Isolate.$lazy($, 'strokeColor', 'strokeColor', 'get$strokeColor', function() {
  return $.SunColor$(35, 54, 157);
});
Isolate.$lazy($, 'sunflowerProperties', 'sunflowerProperties', 'get$sunflowerProperties', function() {
  return $.createSunflowerBinding();
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 toString$0: function() { return $.toStringForNativeObject(this); },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$ImageData: function() { return false; },
 is$Collection: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Map: function() { return false; },
 is$List: function() { return false; },
 is$Element: function() { return false; }
});

$.$defineNativeClass('HTMLAnchorElement', {"":"name>,type<",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLAppletElement', {"":"height=,name>,width="
});

$.$defineNativeClass('Attr', {"":"name>,value="
});

$.$defineNativeClass('HTMLBRElement', {"":"clear<",
 clear$0: function() {
  return this.clear.call$0();
}
});

$.$defineNativeClass('HTMLBaseFontElement', {"":"color="
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
}
});

$.$defineNativeClass('HTMLButtonElement', {"":"name>,type<,value="
});

$.$defineNativeClass('HTMLCanvasElement', {"":"height=,width=",
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1("2d");
}
});

$.$defineNativeClass('CanvasGradient', {
 addColorStop$2: function(offset, color) {
  return this.addColorStop(offset,color);
}
});

$.$defineNativeClass('CanvasRenderingContext', {"":"canvas>"
});

$.$defineNativeClass('CanvasRenderingContext2D', {"":"fillStyle<,font<,lineWidth<,strokeStyle<",
 arc$6: function(x, y, radius, startAngle, endAngle, anticlockwise) {
  return this.arc(x,y,radius,startAngle,endAngle,anticlockwise);
},
 beginPath$0: function() {
  return this.beginPath();
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 closePath$0: function() {
  return this.closePath();
},
 createImageData$2: function(imagedata_OR_sw, sh) {
  var t1, t2, t3;
  t1 = $ === imagedata_OR_sw;
  if (t1)
    imagedata_OR_sw = null;
  t1 = !t1;
  t2 = $ === sh;
  if (t2)
    sh = null;
  if (t1)
    t3 = typeof imagedata_OR_sw === 'object' && imagedata_OR_sw !== null && imagedata_OR_sw.is$ImageData() || imagedata_OR_sw == null;
  else
    t3 = false;
  if (t3 && t2)
    return $._convertNativeToDart_ImageData(this._createImageData_1$1($._convertDartToNative_ImageData(imagedata_OR_sw)));
  if (t1)
    t1 = typeof imagedata_OR_sw === 'number' || imagedata_OR_sw == null;
  else
    t1 = false;
  if (t1)
    return $._convertNativeToDart_ImageData(this._createImageData_2$2(imagedata_OR_sw, sh));
  throw $.$$throw($.ArgumentError$("Incorrect number or type of arguments"));
},
 _createImageData_1$1: function(imagedata) {
  return this.createImageData(imagedata);
},
 _createImageData_2$2: function(sw, sh) {
  return this.createImageData(sw,sh);
},
 createLinearGradient$4: function(x0, y0, x1, y1) {
  return this.createLinearGradient(x0,y0,x1,y1);
},
 fill$0: function() {
  return this.fill();
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text, x, y) {
  return this.fillText(text, x, y);
},
 lineTo$2: function(x, y) {
  return this.lineTo(x,y);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 putImageData$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
  var t1, t2, t3, t4;
  t1 = $ === dirtyX;
  if (t1)
    dirtyX = null;
  t2 = $ === dirtyY;
  if (t2)
    dirtyY = null;
  t3 = $ === dirtyWidth;
  if (t3)
    dirtyWidth = null;
  t4 = $ === dirtyHeight;
  if (t4)
    dirtyHeight = null;
  if (t1 && t2 && t3 && t4) {
    this._putImageData_1$3($._convertDartToNative_ImageData(imagedata), dx, dy);
    return;
  }
  this._putImageData_2$7($._convertDartToNative_ImageData(imagedata), dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight);
  return;
},
 putImageData$3: function(imagedata, dx, dy) {
  return this.putImageData$7(imagedata, dx, dy, $, $, $, $);
},
 _putImageData_1$3: function(imagedata, dx, dy) {
  return this.putImageData(imagedata,dx,dy);
},
 _putImageData_2$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
  return this.putImageData(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 stroke$0: function() {
  return this.stroke();
}
});

$.$defineNativeClass('CharacterData', {"":"data>,length>",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"":"height>,left>,top>,width>"
});

$.$defineNativeClass('CompositionEvent', {"":"data>"
});

$.$defineNativeClass('CSSStyleDeclaration', {"":"length>",
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : "";
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 set$backgroundColor: function(value) {
  this.setProperty$3("background-color", value, "");
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 set$clear: function(value) {
  this.setProperty$3("clear", value, "");
},
 get$color: function() {
  return this.getPropertyValue$1("color");
},
 set$color: function(value) {
  this.setProperty$3("color", value, "");
},
 set$display: function(value) {
  this.setProperty$3("display", value, "");
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "filter");
},
 filter$1: function(arg0) {
  return this.get$filter().call$1(arg0);
},
 set$font: function(value) {
  this.setProperty$3("font", value, "");
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 set$height: function(value) {
  this.setProperty$3("height", value, "");
},
 get$left: function() {
  return this.getPropertyValue$1("left");
},
 set$left: function(value) {
  this.setProperty$3("left", value, "");
},
 set$marginTop: function(value) {
  this.setProperty$3("margin-top", value, "");
},
 get$top: function() {
  return this.getPropertyValue$1("top");
},
 set$top: function(value) {
  this.setProperty$3("top", value, "");
},
 get$width: function() {
  return this.getPropertyValue$1("width");
},
 set$width: function(value) {
  this.setProperty$3("width", value, "");
}
});

$.$defineNativeClass('Document', {"":"$$dom_body:body~",
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $$dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.CONSTANT.substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {
 get$children: function() {
  if (this._children == null)
    this._children = $.FilteredElementList$(this);
  return this._children;
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 set$innerHtml: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHtml')) {
    var t1, e, nodes;
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).clear$0(t1);
    e = $.Element_Element$tag("div");
    e.set$innerHtml(value);
    nodes = $.List_List$from(e.get$nodes());
    $.setRuntimeTypeInfo(nodes, []);
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).addAll$1(t1, nodes);
  } else {
    return Object.prototype.set$innerHtml.call(this, value);
  }
},
 get$offsetParent: function() {
  return;
},
 get$classes: function() {
  return $._FrozenCssClassSet$();
},
 get$style: function() {
  return $.Element_Element$tag("div").get$style();
},
 blur$0: function() {
},
 get$blur: function() {
  return new $.BoundClosure(this, 'blur$0');
},
 focus$0: function() {
},
 click$0: function() {
},
 get$click: function() {
  return new $.BoundClosure(this, 'click$0');
},
 set$tabIndex: function(value) {
  throw $.$$throw($.UnsupportedError$("Tab index can't be set for document fragments."));
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {"":"name>",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMError', {"":"name>"
});

$.$defineNativeClass('DOMException', {"":"name>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {"":"$$dom_children:children~,innerHtml:innerHTML|,tabIndex<,$$dom_className:className},clientHeight>,clientWidth>,$$dom_firstElementChild:firstElementChild~,$$dom_lastElementChild:lastElementChild~,offsetLeft>,offsetParent>,offsetTop>,style>",
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
    return this.get$children();
  } else {
    return Object.prototype.get$elements.call(this);
  }
},
 get$children: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$children')) {
    return $._ChildrenElementList$_wrap(this);
  } else {
    return Object.prototype.get$children.call(this);
  }
},
 set$children: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$children')) {
    var copy, children, t1;
    copy = $.List_List$from(value);
    $.setRuntimeTypeInfo(copy, []);
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, copy);
  } else {
    return Object.prototype.set$children.call(this, value);
  }
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
    return $._ElementCssClassSet$(this);
  } else {
    return Object.prototype.get$classes.call(this);
  }
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 click$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('click$0')) {
    return this.click();
  } else {
    return Object.prototype.click$0.call(this);
  }
},
 get$click: function() {
  return new $.BoundClosure(this, 'click$0');
},
 blur$0: function() {
  return this.blur();
},
 get$blur: function() {
  return new $.BoundClosure(this, 'blur$0');
},
 focus$0: function() {
  return this.focus();
},
 $$dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 $$dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $$dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"":"height=,name>,type<,width="
});

$.$defineNativeClass('Entry', {"":"name>",
 moveTo$4: function(parent, name, successCallback, errorCallback) {
  return this.moveTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 moveTo$2: function(parent$, name$) {
  return this.moveTo(parent$, name$);
},
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('Event', {
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.target);
},
 preventDefault$0: function() {
  return this.preventDefault();
},
 stopPropagation$0: function() {
  return this.stopPropagation();
}
});

$.$defineNativeClass('EventException', {"":"name>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('HTMLFieldSetElement', {"":"name>"
});

$.$defineNativeClass('File', {"":"name>"
});

$.$defineNativeClass('FileException', {"":"name>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 setElements$2: function(array, offset) {
  return this.set(array,offset);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 setElements$2: function(array, offset) {
  return this.set(array,offset);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"":"color="
});

$.$defineNativeClass('HTMLFormElement', {"":"length>,name>"
});

$.$defineNativeClass('HTMLFrameElement', {"":"height>,name>,width>"
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
}
});

$.$defineNativeClass('HTMLHRElement', {"":"width="
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {
 get$body: function() {
  return $.document().get$$$dom_body();
}
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"":"name>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLIFrameElement', {"":"height=,name>,width="
});

$.$defineNativeClass('ImageData', {"":"data>,height>,width>",
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"":"height=,name>,width="
});

$.$defineNativeClass('HTMLInputElement', {"":"height=,max<,min<,name>,pattern>,type<,value=,width=",
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 setElements$2: function(array, offset) {
  return this.set(array,offset);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 setElements$2: function(array, offset) {
  return this.set(array,offset);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 setElements$2: function(array, offset) {
  return this.set(array,offset);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('KeyboardEvent', {
 get$keyCode: function() {
  return this.keyCode;
}
});

$.$defineNativeClass('HTMLKeygenElement', {"":"name>"
});

$.$defineNativeClass('HTMLLIElement', {"":"type<,value="
});

$.$defineNativeClass('HTMLLinkElement', {"":"type<"
});

$.$defineNativeClass('DOMWindow', {"":"innerWidth>,name>,navigator>",
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.top);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMapElement', {"":"name>"
});

$.$defineNativeClass('HTMLMarqueeElement', {"":"height=,width="
});

$.$defineNativeClass('MediaController', {
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {"":"controller>",
 get$on: function() {
  return $.MediaElementEvents$(this);
}
});

$.$defineNativeClass('MessageEvent', {
 get$data: function() {
  return $.convertNativeToDart_SerializedScriptValue(this.data);
}
});

$.$defineNativeClass('HTMLMetaElement', {"":"name>"
});

$.$defineNativeClass('HTMLMeterElement', {"":"max<,min<,value="
});

$.$defineNativeClass('MouseEvent', {
 get$offsetX: function() {
  if (!!this.offsetX)
    return this.offsetX;
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.UnsupportedError$("offsetX is only supported on elements"));
    return $.sub(this.clientX, this.get$target().getBoundingClientRect$0().get$left());
  }
},
 get$offsetY: function() {
  if (!!this.offsetY)
    return this.offsetY;
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.UnsupportedError$("offsetY is only supported on elements"));
    return $.sub(this.clientY, this.get$target().getBoundingClientRect$0().get$top());
  }
}
});

$.$defineNativeClass('NamedNodeMap', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"":"userAgent>"
});

$.$defineNativeClass('Node', {"":"$$dom_attributes:attributes~,$$dom_childNodes:childNodes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,text:textContent|",
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.parentNode;
    parent$.$$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOListElement', {"":"type<"
});

$.$defineNativeClass('HTMLObjectElement', {"":"data>,height=,name>,type<,width="
});

$.$defineNativeClass('HTMLOptionElement', {"":"value="
});

$.$defineNativeClass('HTMLOutputElement', {"":"name>,value="
});

$.$defineNativeClass('HTMLParamElement', {"":"name>,type<,value="
});

$.$defineNativeClass('HTMLPreElement', {"":"width="
});

$.$defineNativeClass('ProcessingInstruction', {"":"data>"
});

$.$defineNativeClass('HTMLProgressElement', {"":"max<,value="
});

$.$defineNativeClass('RadioNodeList', {"":"value="
});

$.$defineNativeClass('RangeException', {"":"name>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLScriptElement', {"":"type<"
});

$.$defineNativeClass('HTMLSelectElement', {"":"length=,name>,value="
});

$.$defineNativeClass('ShadowRoot', {"":"innerHtml:innerHTML|"
});

$.$defineNativeClass('HTMLSourceElement', {"":"type<"
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  this.$$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  this.forEach$1(new $.Storage_keys_anon(keys));
  return keys;
},
 get$length: function() {
  return this.length;
},
 get$isEmpty: function() {
  return this.$$dom_key$1(0) == null;
},
 $$dom_clear$0: function() {
  return this.clear();
},
 $$dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $$dom_key$1: function(index) {
  return this.key(index);
},
 $$dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $$dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"":"key>"
});

$.$defineNativeClass('HTMLStyleElement', {"":"type<"
});

$.$defineNativeClass('HTMLTableCellElement', {"":"colSpan<,height=,width="
});

$.$defineNativeClass('HTMLTableColElement', {"":"width="
});

$.$defineNativeClass('HTMLTableElement', {"":"width=",
 createTBody$0: function() {
  var tbody, t1;
  if (!!this.createTBody)
    return this._createTBody$0();
  tbody = $.Element_Element$tag("tbody");
  t1 = this.get$elements();
  $.getInterceptor$JSArray(t1).add$1(t1, tbody);
  return tbody;
},
 _createTBody$0: function() {
  return this.createTBody();
}
});

$.$defineNativeClass('HTMLTextAreaElement', {"":"name>,value="
});

$.$defineNativeClass('TextEvent', {"":"data>"
});

$.$defineNativeClass('UIEvent', {"":"pageX>,pageY>",
 get$view: function() {
  return $._convertNativeToDart_Window(this.view);
}
});

$.$defineNativeClass('HTMLUListElement', {"":"type<"
});

$.$defineNativeClass('Uint16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 setElements$2: function(array, offset) {
  return this.set(array,offset);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 setElements$2: function(array, offset) {
  return this.set(array,offset);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 setElements$2: function(array, offset) {
  if (Object.getPrototypeOf(this).hasOwnProperty('setElements$2')) {
    return this.set(array,offset);
  } else {
    return Object.prototype.setElements$2.call(this, array, offset);
  }
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', {
 setElements$2: function(array, offset) {
  return this.set(array,offset);
}
});

$.$defineNativeClass('HTMLVideoElement', {"":"height=,width="
});

$.$defineNativeClass('XPathException', {"":"name>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EntryArray', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('IDBDatabaseException', {"":"name>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGCircleElement', {"":"r>"
});

$.$defineNativeClass('SVGFEBlendElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFECompositeElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDropShadowElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEFloodElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEImageElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEMergeElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEMorphologyElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEOffsetElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFETileElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFETurbulenceElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFilterElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGForeignObjectElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGImageElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGMaskElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGPatternElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGRadialGradientElement', {"":"r>"
});

$.$defineNativeClass('SVGRectElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGScriptElement', {"":"type<"
});

$.$defineNativeClass('SVGStyleElement', {"":"type<"
});

$.$defineNativeClass('SVGElement', {
 get$classes: function() {
  if (this._cssClassSet == null)
    this._cssClassSet = $._AttributeClassSet$(this);
  return this._cssClassSet;
},
 get$children: function() {
  return $.FilteredElementList$(this);
},
 set$children: function(value) {
  var children, t1;
  children = this.get$children();
  t1 = $.getInterceptor$JSArray(children);
  t1.clear$0(children);
  t1.addAll$1(children, value);
},
 set$innerHtml: function(svg) {
  var container = $.Element_Element$tag("div");
  container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
  this.set$children($.index(container.get$children(), 0).get$children());
},
 get$$$dom_children: function() {
  throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
},
 click$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
},
 get$click: function() {
  return new $.BoundClosure(this, 'click$0');
}
});

$.$defineNativeClass('SVGException', {"":"name>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGSVGElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGUseElement', {"":"height>,width>"
});

// 128 dynamic classes.
// 253 classes
// 23 !leaf
(function() {
  var v0_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v1_SvgElement = 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTextElement|SVGTRefElement|SVGTSpanElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGComponentTransferFunctionElement|SVGFEFuncBElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncAElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEComponentTransferElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEOffsetElement|SVGFEDiffuseLightingElement|SVGFEMorphologyElement|SVGFEDropShadowElement|SVGFETurbulenceElement|SVGFilterElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGHKernElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGGlyphElement|SVGGlyphRefElement|SVGLineElement|SVGMPathElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGMarkerElement|SVGPathElement|SVGImageElement|SVGFESpotLightElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGSVGElement|SVGTitleElement|SVGUseElement|SVGViewElement|SVGVKernElement|SVGFETileElement', v2_Element = [v0_MediaElement, v1_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLinkElement|HTMLLegendElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v3_CharacterData = 'CharacterData|Text|CDATASection|Comment', v4_Document = 'Document|HTMLDocument|SVGDocument', v5_DocumentFragment = 'DocumentFragment|ShadowRoot', v6_MouseEvent = 'MouseEvent|WheelEvent', v7_UIEvent = [v6_MouseEvent, 'UIEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TextEvent|TouchEvent'].join('|'), v8_Node = [v2_Element, v3_CharacterData, v4_Document, v5_DocumentFragment, 'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|');
  $.dynamicSetMetadata([['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['SVGElement', v1_SvgElement], ['HTMLMediaElement', v0_MediaElement], ['MouseEvent', v6_MouseEvent], ['Element', v2_Element], ['CharacterData', v3_CharacterData], ['Document', v4_Document], ['DocumentFragment', v5_DocumentFragment], ['Node', v8_Node], ['NodeList', 'NodeList|RadioNodeList'], ['CanvasRenderingContext', 'CanvasRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext'], ['UIEvent', v7_UIEvent], ['Entry', 'Entry|DirectoryEntry|FileEntry'], ['Event', [v7_UIEvent, 'Event|IDBVersionChangeEvent|IDBVersionChangeEvent|WebKitAnimationEvent|BeforeLoadEvent|CloseEvent|CustomEvent|DeviceOrientationEvent|DeviceMotionEvent|ErrorEvent|ProgressEvent|XMLHttpRequestProgressEvent|HashChangeEvent|MediaStreamEvent|MediaStreamTrackEvent|MediaKeyEvent|MessageEvent|AudioProcessingEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'].join('|')], ['Uint8Array', 'Uint8Array|Uint8ClampedArray'], ['EventTarget', [v8_Node, 'EventTarget|DOMWindow|MediaController'].join('|')]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=sunflower.dart.js.map